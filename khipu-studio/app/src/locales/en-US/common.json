{
  "app.title": {
    "string": "Khipu Studio",
    "comment": "Main application title displayed in the header and browser tab"
  },
  "nav.home": {
    "string": "Home",
    "comment": "Navigation menu item for the home/dashboard page"
  },
  "nav.project": {
    "string": "Project",
    "comment": "Navigation menu item for project management"
  },
  "nav.book": {
    "string": "Book",
    "comment": "Navigation menu item for book overview"
  },
  "nav.manuscript": {
    "string": "Manuscript",
    "comment": "Navigation menu item for manuscript editing"
  },
  "nav.casting": {
    "string": "Casting",
    "comment": "Navigation menu item for voice casting"
  },
  "nav.characters": {
    "string": "Characters",
    "comment": "Navigation menu item for character management"
  },
  "nav.dossier": {
    "string": "Dossier",
    "comment": "Navigation menu item for dossier/documentation"
  },
  "nav.planning": {
    "string": "Planning",
    "comment": "Navigation menu item for planning phase"
  },
  "nav.voice": {
    "string": "Voice",
    "comment": "Navigation menu item for voice production"
  },
  "nav.export": {
    "string": "Export",
    "comment": "Navigation menu item for export/packaging"
  },
  "nav.packaging": {
    "string": "Packaging",
    "comment": "Navigation menu item for packaging output"
  },
  "nav.settings": {
    "string": "Settings",
    "comment": "Navigation menu item for application settings"
  },

  "home.welcome": {
    "string": "Welcome to Khipu Studio",
    "comment": "Welcome message on the home page"
  },
  "home.cta": {
    "string": "Select a project and start with Manuscript → Planning.",
    "comment": "Call to action text on the home page"
  },
  "home.existingProjects": {
    "string": "Recent Projects",
    "comment": "Header for the recent projects section"
  },
  "home.openExisting": {
    "string": "Open Existing Project",
    "comment": "Button text to open an existing project"
  },
  "home.createNew": {
    "string": "Create New Project",
    "comment": "Header for creating a new project"
  },
  "home.baseFolder": {
    "string": "Base folder",
    "comment": "Label for base folder selection"
  },
  "home.browse": {
    "string": "Browse",
    "comment": "Button text to browse for folder"
  },
  "home.projectName": {
    "string": "Project name",
    "comment": "Label for project name input"
  },
  "home.create": {
    "string": "Create",
    "comment": "Button text to create a project"
  },
  "home.open": {
    "string": "Open",
    "comment": "Button text to open a project"
  },
  "home.instructions": {
    "string": "Open an existing project or create a new one with the recommended structure.",
    "comment": "Instructions text on the home page"
  },
  "home.loading": {
    "string": "Loading…",
    "comment": "Loading text for home page"
  },
  "home.noRecents": {
    "string": "No recent projects.",
    "comment": "Message when no recent projects exist"
  },
  "home.createError": {
    "string": "Could not create project.",
    "comment": "Error message when project creation fails"
  },
  "home.createSuccess": {
    "string": "Project created ✔",
    "comment": "Success message when project is created"
  },
  "home.structurePreview": {
    "string": "Structure to create",
    "comment": "Header for project structure preview"
  },

  "casting.title": {
    "string": "Voice Casting",
    "comment": "Title for the voice casting page"
  },
  "casting.description": {
    "string": "Select and manage voices for text-to-speech generation based on your TTS engine configuration.",
    "comment": "Description for the voice casting page"
  },
  "casting.loading": {
    "string": "Loading voice inventory...",
    "comment": "Loading message for voice data"
  },
  "casting.loadError": {
    "string": "Error loading voice data",
    "comment": "Error message when voice data fails to load"
  },
  "casting.saveError": {
    "string": "Error saving voice selection",
    "comment": "Error message when voice selection fails to save"
  },
  "casting.saving": {
    "string": "Saving selection...",
    "comment": "Message shown while saving voice selection"
  },
  "casting.saved": {
    "string": "Voice selection saved ✔",
    "comment": "Success message when voice selection is saved"
  },
  "casting.engineTitle": {
    "string": "TTS Engine",
    "comment": "Title for TTS engine section"
  },
  "casting.engineDescription": {
    "string": "Choose voices compatible with your selected TTS engine:",
    "comment": "Description for engine voice compatibility"
  },
  "casting.voicesAvailable": {
    "string": "voices available",
    "comment": "Text indicating number of available voices"
  },
  "casting.currentEngine": {
    "string": "Current engine",
    "comment": "Label for current TTS engine"
  },
  "casting.voicesTitle": {
    "string": "Available Voices",
    "comment": "Title for available voices section"
  },
  "casting.selectAll": {
    "string": "Select All",
    "comment": "Button text to select all voices"
  },
  "casting.deselectAll": {
    "string": "Deselect All",
    "comment": "Button text to deselect all voices"
  },
  "casting.noVoicesForEngine": {
    "string": "No voices available for this engine.",
    "comment": "Message when no voices are available for selected engine"
  },
  "casting.selectedCount": {
    "string": "{{count}} voices selected",
    "comment": "Text showing number of selected voices"
  },
  "casting.save": {
    "string": "Save Selection",
    "comment": "Button text to save voice selection"
  },
  "casting.male": {
    "string": "Male",
    "comment": "Label for male voice gender"
  },
  "casting.female": {
    "string": "Female",
    "comment": "Label for female voice gender"
  },
  "casting.neutral": {
    "string": "Neutral",
    "comment": "Label for neutral voice gender"
  },
  "casting.age.child": {
    "string": "Child",
    "comment": "Label for child age voice"
  },
  "casting.age.teen": {
    "string": "Teen",
    "comment": "Label for teen age voice"
  },
  "casting.age.adult": {
    "string": "Adult",
    "comment": "Label for adult age voice"
  },
  "casting.age.elderly": {
    "string": "Elderly",
    "comment": "Label for elderly age voice"
  },
  "casting.styles": {
    "string": "Styles",
    "comment": "Label for voice styles"
  },
  "casting.accents": {
    "string": "Accents",
    "comment": "Label for voice accents"
  },
  "casting.engine.azure": {
    "string": "Azure",
    "comment": "Name for Azure TTS engine"
  },
  "casting.engine.elevenlabs": {
    "string": "ElevenLabs",
    "comment": "Name for ElevenLabs TTS engine"
  },
  "casting.engine.openai": {
    "string": "OpenAI",
    "comment": "Name for OpenAI TTS engine"
  },
  "casting.engine.google": {
    "string": "Google Cloud",
    "comment": "Name for Google Cloud TTS engine"
  },
  "casting.audition.loadError": {
    "string": "Error loading audio",
    "comment": "Error message when audio preview fails to load"
  },
  "casting.complete": {
    "string": "Complete Casting",
    "comment": "Button text to complete casting step"
  },
  "casting.completed": {
    "string": "Casting completed ✔",
    "comment": "Message when casting step is completed"
  },
  "casting.completeError": {
    "string": "Error completing casting",
    "comment": "Error message when completing casting fails"
  },
  "casting.addLanguage": {
    "string": "+ Add Language",
    "comment": "Button text to add a language to voice selection"
  },
  "casting.languagesLabel": {
    "string": "Languages:",
    "comment": "Label for selected languages tags"
  },
  "casting.audition.button": {
    "string": "Audition",
    "comment": "Button text for voice audition"
  },
  "casting.audition.loading": {
    "string": "Playing...",
    "comment": "Button text when audition is playing"
  },

  "settings.description": {
    "string": "Adjust global application settings.",
    "comment": "Description text for the settings page"
  },
  "settings.theme": {
    "string": "Theme",
    "comment": "Label for theme selection setting"
  },
  "settings.themeSystem": {
    "string": "System",
    "comment": "Theme option to follow system theme"
  },
  "settings.themeDark": {
    "string": "Dark",
    "comment": "Dark theme option"
  },
  "settings.themeLight": {
    "string": "Light",
    "comment": "Light theme option"
  },
  "settings.themeNote": {
    "string": "Theme applies globally.",
    "comment": "Note about theme application scope"
  },
  "settings.language": {
    "string": "Language",
    "comment": "Label for language selection setting"
  },
  "settings.languageSelectLabel": {
    "string": "Select language",
    "comment": "Label for language selector dropdown"
  },
  "settings.save": {
    "string": "Save",
    "comment": "Save button text for settings"
  },
  "settings.saving": {
    "string": "Saving…",
    "comment": "Status message when saving settings"
  },
  "settings.saved": {
    "string": "Saved ✔",
    "comment": "Success message when settings are saved"
  },
  "settings.error": {
    "string": "Error",
    "comment": "Error message when settings save fails"
  },
  "settings.loading": {
    "string": "Loading…",
    "comment": "Loading message for settings page"
  },

  "common.loading": {
    "string": "Loading...",
    "comment": "Generic loading state indicator"
  },
  "common.playing": {
    "string": "Playing...",
    "comment": "Audio playback state indicator"
  },
  "common.audition": {
    "string": "Audition",
    "comment": "Button text for audio audition/preview"
  },
  "common.processing": {
    "string": "Processing",
    "comment": "Default status message during processing operations"
  },

  "status.completed": {
    "string": "Completed",
    "comment": "Generic completion status message"
  },
  "status.failed": {
    "string": "Failed",
    "comment": "Generic failure status message"
  },

  "image.errors.failedToCopy": {
    "string": "Failed to copy image",
    "comment": "Error message when image copy operation fails"
  },
  "image.errors.failedToGetFilename": {
    "string": "Failed to get filename from copied image", 
    "comment": "Error message when unable to extract filename from copied image"
  },
  "image.errors.failedToSelect": {
    "string": "Error selecting image. Please try again.",
    "comment": "Error message when image selection fails"
  },

  "manuscript.saved": {
    "string": "Saved ✔",
    "comment": "Success message when manuscript changes are saved"
  },
  "manuscript.saveError": {
    "string": "Error saving",
    "comment": "Error message when manuscript save fails"
  },

  "plan.noPlanToShow": {
    "string": "No plan to show",
    "comment": "Message when no plan data is available to display"
  },
  "plan.goToText": {
    "string": "Go to text",
    "comment": "Button text to navigate to the source text in the manuscript"
  },

  "planning.tooltips.clickToEdit": {
    "string": "Click to edit text (changes save to plan only)",
    "comment": "Tooltip for editable text segments in planning view"
  },
  "planning.tooltips.splitSegment": {
    "string": "Split segment at cursor position",
    "comment": "Tooltip for split segment button"
  },
  "planning.tooltips.mergeBackward": {
    "string": "Merge with previous segment",
    "comment": "Tooltip for merge backward button"
  },
  "planning.tooltips.mergeForward": {
    "string": "Merge with next segment",
    "comment": "Tooltip for merge forward button"
  },
  "planning.tooltips.deleteSegment": {
    "string": "Delete this segment",
    "comment": "Tooltip for delete segment button"
  },
  "planning.tooltips.undoChanges": {
    "string": "Undo changes to original text",
    "comment": "Tooltip for undo changes button"
  },
  "planning.tooltips.auditionSegment": {
    "string": "Listen to this segment",
    "comment": "Tooltip for audition segment button"
  },

  "planning.merge.noNextSegment": {
    "string": "No next segment to merge with",
    "comment": "Error message when trying to merge forward with no next segment"
  },
  "planning.merge.noPreviousSegment": {
    "string": "No previous segment to merge with",
    "comment": "Error message when trying to merge backward with no previous segment"
  },

  "planning.status.reloading": {
    "string": "Plan file updated, reloading...",
    "comment": "Status message when plan file is updated and being reloaded"
  },
  "planning.status.completed": {
    "string": "Planning page marked as complete",
    "comment": "Status message when planning step is completed"
  },

  "planning.errors.selectChapter": {
    "string": "Please select a chapter and ensure project is loaded.",
    "comment": "Error message when no chapter is selected or project not loaded"
  },
  "planning.errors.chapterNotFound": {
    "string": "Selected chapter not found.",
    "comment": "Error message when selected chapter cannot be found"
  },
  "planning.errors.ipcNotAvailable": {
    "string": "IPC not available. Please ensure Electron is running.",
    "comment": "Error message when Electron IPC is not available"
  },
  "planning.errors.failedToGeneratePlans": {
    "string": "Failed to generate plans. Please try generating plans manually first.",
    "comment": "Error message when automatic plan generation fails"
  },
  "planning.errors.serviceConnectionFailed": {
    "string": "Failed to connect to character assignment service. Using fallback logic.",
    "comment": "Error message when character assignment service connection fails"
  },
  "planning.errors.completedButFailedReload": {
    "string": "Character assignment completed but failed to reload. Please refresh the chapter.",
    "comment": "Error message when character assignment completes but reload fails"
  },

  "planning.segmentNotFound": {
    "string": "Segment not found",
    "comment": "Error message when a segment cannot be found"
  },
  "planning.invalidSplitPosition": {
    "string": "Invalid split position",
    "comment": "Error message when split position is invalid"
  },
  "planning.cannotDeleteLastSegment": {
    "string": "Cannot delete the last segment of the chapter",
    "comment": "Error message when trying to delete the last segment"
  },
  "planning.segmentTextNotFound": {
    "string": "Segment text not found",
    "comment": "Error message when segment text is missing"
  },
  "planning.segmentSplitSuccessfully": {
    "string": "Segment split successfully",
    "comment": "Success message when a segment is split"
  },
  "planning.splitOperationFailed": {
    "string": "Split operation failed",
    "comment": "Error message when split operation fails"
  },
  "planning.mergeOperationFailed": {
    "string": "Merge operation failed",
    "comment": "Error message when merge operation fails"
  },
  "planning.segmentDeletedSuccessfully": {
    "string": "Segment deleted successfully",
    "comment": "Success message when a segment is deleted"
  },
  "planning.deleteOperationFailed": {
    "string": "Delete operation failed",
    "comment": "Error message when delete operation fails"
  },
  "planning.mergeWithPrevious": {
    "string": "Merge with previous segment",
    "comment": "Tooltip for merge with previous button"
  },
  "planning.mergeWithNext": {
    "string": "Merge with next segment",
    "comment": "Tooltip for merge with next button"
  },
  "planning.deleteThisSegment": {
    "string": "Delete this segment",
    "comment": "Tooltip for delete segment button"
  },
  "planning.undoLastOperation": {
    "string": "Undo last segment operation",
    "comment": "Tooltip for undo button"
  },
  "planning.splitAtCursor": {
    "string": "Split segment at cursor position",
    "comment": "Tooltip for split at cursor button"
  },
  "planning.clickToEdit": {
    "string": "Click to edit text",
    "comment": "Tooltip for editable text"
  },
  "planning.splitInstructions": {
    "string": "✂️ Position cursor where you want to split, then click \"Split at Cursor\"",
    "comment": "Instructions for splitting segments"
  },
  "planning.undoSuccessful": {
    "string": "Undo successful",
    "comment": "Success message when undo operation succeeds"
  },
  "planning.tooltips.saveChanges": {
    "string": "Save changes (Ctrl+Enter)",
    "comment": "Tooltip for save changes button"
  },
  "planning.tooltips.cancelEdit": {
    "string": "Cancel edit (Escape)",
    "comment": "Tooltip for cancel edit button"
  },

  "book.title": {
    "string": "Book Metadata",
    "comment": "Title for book metadata page"
  },
  "book.loading": {
    "string": "Loading book metadata...",
    "comment": "Loading message for book metadata"
  },
  "book.save": {
    "string": "Save",
    "comment": "Save button text for book metadata"
  },
  "book.saved": {
    "string": "Book metadata saved",
    "comment": "Success message when book metadata is saved"
  },
  "book.saveError": {
    "string": "Error saving book metadata",
    "comment": "Error message when book metadata save fails"
  },
  "book.loadError": {
    "string": "Error loading book metadata",
    "comment": "Error message when book metadata load fails"
  },
  "book.completeButton": {
    "string": "Mark book metadata as complete",
    "comment": "Button text to complete book metadata step"
  },
  "book.basicInfo": {
    "string": "Basic Information",
    "comment": "Section header for basic book information"
  },
  "book.title.label": {
    "string": "Title",
    "comment": "Label for book title field"
  },
  "book.subtitle.label": {
    "string": "Subtitle",
    "comment": "Label for book subtitle field"
  },
  "book.authors.label": {
    "string": "Authors",
    "comment": "Label for book authors field"
  },
  "book.narrators.label": {
    "string": "Narrators",
    "comment": "Label for book narrators field"
  },
  "book.content": {
    "string": "Content Information",
    "comment": "Section header for content information"
  },
  "book.description.label": {
    "string": "Description",
    "comment": "Label for book description field"
  },
  "book.keywords.label": {
    "string": "Keywords",
    "comment": "Label for book keywords field"
  },
  "book.categories.label": {
    "string": "Categories",
    "comment": "Label for book categories field"
  },
  "book.language.label": {
    "string": "Language",
    "comment": "Label for book language field"
  },
  "book.publishing": {
    "string": "Publishing Information",
    "comment": "Section header for publishing information"
  },
  "book.publisher.label": {
    "string": "Publisher",
    "comment": "Label for publisher field"
  },
  "book.publishingDate.label": {
    "string": "Publishing Date",
    "comment": "Label for publishing date field"
  },
  "book.isbn.label": {
    "string": "ISBN",
    "comment": "Label for ISBN field"
  },
  "book.sku.label": {
    "string": "SKU",
    "comment": "Label for SKU field"
  },

  "project.title": {
    "string": "Project Configuration",
    "comment": "Title for project configuration page"
  },
  "project.loading": {
    "string": "Loading configuration...",
    "comment": "Loading message for project configuration"
  },
  "project.save": {
    "string": "Save",
    "comment": "Save button text for project configuration"
  },
  "project.saved": {
    "string": "Configuration saved",
    "comment": "Success message when configuration is saved"
  },
  "project.saveError": {
    "string": "Error saving configuration",
    "comment": "Error message when configuration save fails"
  },
  "project.loadError": {
    "string": "Error loading configuration",
    "comment": "Error message when configuration load fails"
  },
  "project.completeButton": {
    "string": "Mark configuration as complete",
    "comment": "Button text to complete project configuration step"
  },
  "project.markComplete": {
    "string": "Mark configuration as complete",
    "comment": "Button text to complete project configuration"
  },
  "project.general": {
    "string": "General Configuration",
    "comment": "Section header for general configuration"
  },
  "project.language": {
    "string": "Project language",
    "comment": "Label for project language setting"
  },
  "project.manuscript": {
    "string": "Manuscript",
    "comment": "Section header for manuscript settings"
  },
  "project.chapterGlob": {
    "string": "Chapter file pattern",
    "comment": "Label for chapter file pattern setting"
  },
  "project.planning": {
    "string": "Planning",
    "comment": "Section header for planning settings"
  },
  "project.maxKb": {
    "string": "Maximum KB per query",
    "comment": "Label for maximum KB per query setting"
  },
  "project.llmAttribution": {
    "string": "LLM Attribution",
    "comment": "Label for LLM attribution setting"
  },
  "project.attributionOn": {
    "string": "Enabled",
    "comment": "Label for attribution enabled option"
  },
  "project.attributionOff": {
    "string": "Disabled",
    "comment": "Label for attribution disabled option"
  },
  "project.ssml": {
    "string": "SSML",
    "comment": "Section header for SSML settings"
  },
  "project.rate": {
    "string": "Rate",
    "comment": "Label for SSML rate setting"
  },
  "project.pitch": {
    "string": "Pitch",
    "comment": "Label for SSML pitch setting"
  },
  "project.breaks": {
    "string": "Breaks (ms)",
    "comment": "Label for SSML breaks setting"
  },
  "project.pauseConfiguration": {
    "string": "Configure pause durations (in milliseconds) to be inserted in the planning:",
    "comment": "Description for pause configuration section"
  },
  "project.ttsCachingInfo": {
    "string": "TTS caching is always enabled for optimal performance.",
    "comment": "Information about TTS caching"
  },
  "project.llm": {
    "string": "LLM Engine",
    "comment": "Section header for LLM engine settings"
  },
  "project.llmEngine": {
    "string": "Engine",
    "comment": "Label for LLM engine selection"
  },
  "project.llmModel": {
    "string": "Model (OpenAI)",
    "comment": "Placeholder for OpenAI model field"
  },
  "project.llmModelLocal": {
    "string": "Model (Local)",
    "comment": "Placeholder for local model field"
  },
  "project.llmEndpoint": {
    "string": "Endpoint (Local)",
    "comment": "Placeholder for local endpoint field"
  },
  "project.tts": {
    "string": "TTS Engine",
    "comment": "Section header for TTS engine settings"
  },
  "project.ttsEngine": {
    "string": "Engine",
    "comment": "Label for TTS engine selection"
  },
  "project.ttsVoiceAzure": {
    "string": "Azure voice (e.g., en-US-JennyNeural)",
    "comment": "Placeholder for Azure voice field"
  },
  "project.ttsVoiceElevenlabs": {
    "string": "ElevenLabs voice ID",
    "comment": "Placeholder for ElevenLabs voice ID field"
  },
  "project.ttsModelLocal": {
    "string": "Local model (optional)",
    "comment": "Placeholder for local TTS model field"
  },
  "project.openaiCredentials": {
    "string": "OpenAI Credentials",
    "comment": "Header for OpenAI credentials section"
  },
  "project.openaiApiKey": {
    "string": "OpenAI API Key",
    "comment": "Label for OpenAI API key field"
  },
  "project.azureOpenaiCredentials": {
    "string": "Azure OpenAI Credentials",
    "comment": "Header for Azure OpenAI credentials section"
  },
  "project.azureOpenaiApiKey": {
    "string": "Azure OpenAI API Key",
    "comment": "Label for Azure OpenAI API key field"
  },
  "project.azureOpenaiApiKeyPlaceholder": {
    "string": "Enter Azure OpenAI API key",
    "comment": "Placeholder for Azure OpenAI API key field"
  },
  "project.azureTtsCredentials": {
    "string": "Azure TTS Credentials",
    "comment": "Header for Azure TTS credentials section"
  },
  "project.azureTtsKey": {
    "string": "Azure TTS Key",
    "comment": "Label for Azure TTS key field"
  },
  "project.azureRegion": {
    "string": "Azure Region",
    "comment": "Label for Azure region field"
  },
  "project.sentencePause": {
    "string": "Sentence Pause",
    "comment": "Label for sentence pause setting"
  },
  "project.paragraphPause": {
    "string": "Paragraph Pause",
    "comment": "Label for paragraph pause setting"
  },
  "project.chapterPause": {
    "string": "Chapter Pause",
    "comment": "Label for chapter pause setting"
  },
  "project.commaPause": {
    "string": "Comma Pause",
    "comment": "Label for comma pause setting"
  },
  "project.colonPause": {
    "string": "Colon Pause",
    "comment": "Label for colon pause setting"
  },
  "project.semicolonPause": {
    "string": "Semi-colon Pause",
    "comment": "Label for semicolon pause setting"
  },

  "manu.title": {
    "string": "Manuscript",
    "comment": "Title for manuscript page"
  },

  "workflow.readyToStart": {
    "string": "Workflow: Ready to start",
    "comment": "Workflow status message when ready to start"
  },
  "workflow.completed": {
    "string": "Completed: {{steps}}",
    "comment": "Workflow status showing completed steps"
  },
  "workflow.completedLabel": {
    "string": "Completed",
    "comment": "Label for completed workflow status"
  },
  "workflow.next": {
    "string": "Next: {{step}}",
    "comment": "Workflow status showing next step"
  },
  "workflow.nextLabel": {
    "string": "Next",
    "comment": "Label for next step"
  },
  "workflow.allComplete": {
    "string": "🎉 All workflow steps completed!",
    "comment": "Success message when all workflow steps are done"
  },
  "workflow.buttonCompleted": {
    "string": "✓ Completed",
    "comment": "Button text showing step is completed"
  },
  "workflow.stepCompleted": {
    "string": "Step completed",
    "comment": "Message when a step is completed"
  },

  "characters.description": {
    "string": "Detection, editing & voice preparation.",
    "comment": "Description for the characters page"
  },
  "planning.description": {
    "string": "TTS-compliant chunk breakdown and character voice assignment - work chapter by chapter.",
    "comment": "Description for the planning page"
  },
  "planning.generateInstruction": {
    "string": "Click \"Generate Plan for {{chapter}}\" to create TTS-compliant chunks with AI speaker detection.",
    "comment": "Instruction for generating a plan for a chapter"
  },
  "planning.segmentsAndVoices": {
    "string": "Segments and Voice Assignment",
    "comment": "Header for segments and voice assignment section"
  },
  "planning.chunksVoiceAssignment": {
    "string": "Segments and Voice Assignment",
    "comment": "Header for planning chunks and voice assignment section"
  },
  "home.projectSetup": {
    "string": "Set up a new audiobook project with the required folder structure.",
    "comment": "Description for creating a new project"
  },
  "project.keywords": {
    "string": "Keywords:",
    "comment": "Label for project keywords field"
  },
  "project.categories": {
    "string": "Categories:",
    "comment": "Label for project categories field"
  },
  "project.openaiBaseUrl": {
    "string": "OpenAI Base URL (optional)",
    "comment": "Label for optional OpenAI base URL field"
  },
  "project.packaging": {
    "string": "Packaging",
    "comment": "Header for packaging section"
  },
  "project.outputDirectory": {
    "string": "Output Directory",
    "comment": "Label for output directory field"
  },
  "project.targetPlatforms": {
    "string": "Target Platforms",
    "comment": "Label for target platforms section"
  },
  "planning.generatePlanFor": {
    "string": "Generate Plan for {{chapter}}",
    "comment": "Button text to generate plan for a specific chapter"
  },
  "planning.assignCharacters": {
    "string": "Assign Characters",
    "comment": "Button text to assign characters"
  },
  "planning.savePlan": {
    "string": "Save Plan",
    "comment": "Button text to save planning data"
  },
  "planning.markChapterComplete": {
    "string": "Mark Chapter Complete",
    "comment": "Button text to mark chapter as complete"
  },
  "planning.chapterLabel": {
    "string": "Chapter:",
    "comment": "Label for chapter selection"
  },
  "planning.chunkLabel": {
    "string": "Chunk",
    "comment": "Label for chunk section"
  },
  "planning.chunkAll": {
    "string": "(all)",
    "comment": "Option to show all chunks"
  },
  "planning.onlyUnknowns": {
    "string": "only unknowns",
    "comment": "Option to show only unknown chunks"
  },
  "planning.preview": {
    "string": "Preview",
    "comment": "Header for preview section"
  },
  "planning.edit": {
    "string": "Edit",
    "comment": "Button text to edit content"
  },
  "planning.merge": {
    "string": "Merge",
    "comment": "Button text to merge segments"
  },
  "planning.delete": {
    "string": "Delete",
    "comment": "Button text to delete item"
  },
  "planning.undo": {
    "string": "Undo",
    "comment": "Button text to undo changes"
  },
  "planning.table.delim": {
    "string": "delim",
    "comment": "Table header for delimiter column"
  },
  "planning.table.start": {
    "string": "start",
    "comment": "Table header for start position column"
  },
  "planning.table.end": {
    "string": "end",
    "comment": "Table header for end position column"
  },
  "planning.table.len": {
    "string": "len",
    "comment": "Table header for length column"
  },
  "planning.table.character": {
    "string": "character",
    "comment": "Table header for character column"
  },
  "characters.voiceAssignment": {
    "string": "Voice Assignment",
    "comment": "Label for voice assignment section"
  },
  "characters.defaultStyle": {
    "string": "Default Style",
    "comment": "Label for default voice style"
  },
  "characters.styleEmpathetic": {
    "string": "empathetic",
    "comment": "Voice style option: empathetic"
  },
  "characters.method": {
    "string": "Method",
    "comment": "Label for assignment method"
  },
  "characters.methodManual": {
    "string": "Manual",
    "comment": "Manual assignment method"
  },
  "characters.methodAutoAssigned": {
    "string": "Auto-assigned",
    "comment": "Auto-assigned assignment method"
  },
  "characters.intensity": {
    "string": "Intensity",
    "comment": "Label for voice intensity control"
  },
  "characters.rate": {
    "string": "Rate",
    "comment": "Label for voice rate control"
  },
  "characters.pitch": {
    "string": "Pitch",
    "comment": "Label for voice pitch control"
  },
  "characters.audition": {
    "string": "Audition",
    "comment": "Button text for character voice audition"
  },
  "characters.remove": {
    "string": "Remove",
    "comment": "Button text to remove character"
  },
  "characters.detectRefresh": {
    "string": "Detect / Refresh",
    "comment": "Button text for character detection/refresh"
  },
  "characters.add": {
    "string": "Add",
    "comment": "Button text to add character"
  },
  "characters.sortByFrequency": {
    "string": "Sort by Frequency",
    "comment": "Button text to sort characters by frequency"
  },
  "characters.assignVoices": {
    "string": "Assign Voices",
    "comment": "Button text to assign voices to characters"
  },
  "characters.save": {
    "string": "Save",
    "comment": "Button text to save character data"
  },
  "characters.markComplete": {
    "string": "Mark Complete",
    "comment": "Button text to mark characters step complete"
  }
}
