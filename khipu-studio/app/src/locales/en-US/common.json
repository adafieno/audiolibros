{
  "app.title": {
    "string": "Khipu Studio",
    "comment": "Main application title displayed in the header and browser tab"
  },
  "nav.home": {
    "string": "Home",
    "comment": "Navigation menu item for the home/dashboard page"
  },
  "nav.project": {
    "string": "Project",
    "comment": "Navigation menu item for project management"
  },
  "nav.book": {
    "string": "Book",
    "comment": "Navigation menu item for book overview"
  },
  "nav.manuscript": {
    "string": "Manuscript",
    "comment": "Navigation menu item for manuscript editing"
  },
  "nav.casting": {
    "string": "Casting",
    "comment": "Navigation menu item for voice casting"
  },
  "nav.characters": {
    "string": "Characters",
    "comment": "Navigation menu item for character management"
  },
  "nav.dossier": {
    "string": "Dossier",
    "comment": "Navigation menu item for dossier/documentation"
  },
  "nav.planning": {
    "string": "Orchestration",
    "comment": "Navigation menu item for orchestration phase"
  },
  "nav.voice": {
    "string": "Audio Production",
    "comment": "Navigation menu item for audio production"
  },
  "nav.cost": {
    "string": "Cost Tracking",
    "comment": "Navigation menu item for AI service cost tracking"
  },
  "nav.export": {
    "string": "Export",
    "comment": "Navigation menu item for export/packaging"
  },
  "nav.packaging": {
    "string": "Packaging",
    "comment": "Navigation menu item for packaging output"
  },
  "nav.settings": {
    "string": "Settings",
    "comment": "Navigation menu item for application settings"
  },

  "home.welcome": {
    "string": "Welcome to Khipu Studio",
    "comment": "Welcome message on the home page"
  },
  "home.cta": {
    "string": "Select a project and start with Manuscript → Orchestration.",
    "comment": "Call to action text on the home page"
  },
  "home.existingProjects": {
    "string": "Recent Projects",
    "comment": "Header for the recent projects section"
  },
  "home.openExisting": {
    "string": "Open Existing Project",
    "comment": "Button text to open an existing project"
  },
  "home.createNew": {
    "string": "Create New Project",
    "comment": "Header for creating a new project"
  },
  "home.baseFolder": {
    "string": "Base folder",
    "comment": "Label for base folder selection"
  },
  "home.browse": {
    "string": "Browse",
    "comment": "Button text to browse for folder"
  },
  "home.projectName": {
    "string": "Project name",
    "comment": "Label for project name input"
  },
  "home.create": {
    "string": "Create",
    "comment": "Button text to create a project"
  },
  "home.open": {
    "string": "Open",
    "comment": "Button text to open a project"
  },
  "home.instructions": {
    "string": "Open an existing project or create a new one with the recommended structure.",
    "comment": "Instructions text on the home page"
  },
  "home.loading": {
    "string": "Loading…",
    "comment": "Loading text for home page"
  },
  "home.noRecents": {
    "string": "No recent projects.",
    "comment": "Message when no recent projects exist"
  },
  "home.createError": {
    "string": "Could not create project.",
    "comment": "Error message when project creation fails"
  },
  "home.createSuccess": {
    "string": "Project created ✔",
    "comment": "Success message when project is created"
  },
  "home.structurePreview": {
    "string": "Structure to create",
    "comment": "Header for project structure preview"
  },

  "casting.title": {
    "string": "Voice Casting",
    "comment": "Title for the voice casting page"
  },
  "casting.description": {
    "string": "Select and manage voices for text-to-speech generation based on your TTS engine configuration.",
    "comment": "Description for the voice casting page"
  },
  "casting.loading": {
    "string": "Loading voice inventory...",
    "comment": "Loading message for voice data"
  },
  "casting.loadError": {
    "string": "Error loading voice data",
    "comment": "Error message when voice data fails to load"
  },
  "casting.saveError": {
    "string": "Error saving voice selection",
    "comment": "Error message when voice selection fails to save"
  },
  "casting.saving": {
    "string": "Saving selection...",
    "comment": "Message shown while saving voice selection"
  },
  "casting.saved": {
    "string": "Voice selection saved ✔",
    "comment": "Success message when voice selection is saved"
  },
  "casting.engineTitle": {
    "string": "TTS Engine",
    "comment": "Title for TTS engine section"
  },
  "casting.engineDescription": {
    "string": "Choose voices compatible with your selected TTS engine:",
    "comment": "Description for engine voice compatibility"
  },
  "casting.voicesAvailable": {
    "string": "voices available",
    "comment": "Text indicating number of available voices"
  },
  "casting.currentEngine": {
    "string": "Current engine",
    "comment": "Label for current TTS engine"
  },
  "casting.voicesTitle": {
    "string": "Available Voices",
    "comment": "Title for available voices section"
  },
  "casting.selectAll": {
    "string": "Select All",
    "comment": "Button text to select all voices"
  },
  "casting.deselectAll": {
    "string": "Deselect All",
    "comment": "Button text to deselect all voices"
  },
  "casting.noVoicesForEngine": {
    "string": "No voices available for this engine.",
    "comment": "Message when no voices are available for selected engine"
  },
  "casting.selectedCount": {
    "string": "{{count}} voices selected",
    "comment": "Text showing number of selected voices"
  },
  "casting.save": {
    "string": "Save Selection",
    "comment": "Button text to save voice selection"
  },
  "casting.male": {
    "string": "Male",
    "comment": "Label for male voice gender"
  },
  "casting.female": {
    "string": "Female",
    "comment": "Label for female voice gender"
  },
  "casting.neutral": {
    "string": "Neutral",
    "comment": "Label for neutral voice gender"
  },
  "casting.age.child": {
    "string": "Child",
    "comment": "Label for child age voice"
  },
  "casting.age.teen": {
    "string": "Teen",
    "comment": "Label for teen age voice"
  },
  "casting.age.adult": {
    "string": "Adult",
    "comment": "Label for adult age voice"
  },
  "casting.age.elderly": {
    "string": "Elderly",
    "comment": "Label for elderly age voice"
  },
  "casting.styles": {
    "string": "Styles",
    "comment": "Label for voice styles"
  },
  "casting.accents": {
    "string": "Accents",
    "comment": "Label for voice accents"
  },
  "casting.engine.azure": {
    "string": "Azure",
    "comment": "Name for Azure TTS engine"
  },
  "casting.engine.elevenlabs": {
    "string": "ElevenLabs",
    "comment": "Name for ElevenLabs TTS engine"
  },
  "casting.engine.openai": {
    "string": "OpenAI",
    "comment": "Name for OpenAI TTS engine"
  },
  "casting.engine.google": {
    "string": "Google Cloud",
    "comment": "Name for Google Cloud TTS engine"
  },
  "casting.audition.loadError": {
    "string": "Error loading audio",
    "comment": "Error message when audio preview fails to load"
  },
  "casting.complete": {
    "string": "Complete Casting",
    "comment": "Button text to complete casting step"
  },
  "casting.completed": {
    "string": "Casting completed ✔",
    "comment": "Message when casting step is completed"
  },
  "casting.completeError": {
    "string": "Error completing casting",
    "comment": "Error message when completing casting fails"
  },
  "casting.addLanguage": {
    "string": "+ Add Language",
    "comment": "Button text to add a language to voice selection"
  },
  "casting.languagesLabel": {
    "string": "Languages:",
    "comment": "Label for selected languages tags"
  },
  "casting.audition.button": {
    "string": "Audition",
    "comment": "Button text for voice audition"
  },
  "casting.audition.loading": {
    "string": "Playing...",
    "comment": "Button text when audition is playing"
  },

  "settings.title": {
    "string": "Settings",
    "comment": "Page title for settings"
  },
  "settings.description": {
    "string": "Adjust global application settings.",
    "comment": "Description text for the settings page"
  },
  "settings.theme": {
    "string": "Theme",
    "comment": "Label for theme selection setting"
  },
  "settings.themeSystem": {
    "string": "System",
    "comment": "Theme option to follow system theme"
  },
  "settings.themeDark": {
    "string": "Dark",
    "comment": "Dark theme option"
  },
  "settings.themeLight": {
    "string": "Light",
    "comment": "Light theme option"
  },
  "settings.themeNote": {
    "string": "Theme applies globally.",
    "comment": "Note about theme application scope"
  },
  "settings.language": {
    "string": "Language",
    "comment": "Label for language selection setting"
  },
  "settings.languageSelectLabel": {
    "string": "Select language",
    "comment": "Label for language selector dropdown"
  },
  "settings.save": {
    "string": "Save",
    "comment": "Save button text for settings"
  },
  "settings.saving": {
    "string": "Saving…",
    "comment": "Status message when saving settings"
  },
  "settings.saved": {
    "string": "Saved ✔",
    "comment": "Success message when settings are saved"
  },
  "settings.error": {
    "string": "Error",
    "comment": "Error message when settings save fails"
  },
  "settings.loading": {
    "string": "Loading…",
    "comment": "Loading message for settings page"
  },
  "settings.autoSave": {
    "string": "Changes are automatically saved.",
    "comment": "Message indicating that settings auto-save"
  },

  "common.loading": {
    "string": "Loading...",
    "comment": "Generic loading state indicator"
  },
  "common.playing": {
    "string": "Playing...",
    "comment": "Audio playback state indicator"
  },
  "common.audition": {
    "string": "Audition",
    "comment": "Button text for audio audition/preview"
  },
  "common.processing": {
    "string": "Processing",
    "comment": "Default status message during processing operations"
  },

  "status.completed": {
    "string": "Completed",
    "comment": "Generic completion status message"
  },
  "status.failed": {
    "string": "Failed",
    "comment": "Generic failure status message"
  },
  "status.noProjectLoaded": {
    "string": "No project loaded",
    "comment": "Status message when no project is loaded"
  },
  "status.loadProjectToManagePlanning": {
    "string": "Please load a project first to manage orchestration.",
    "comment": "Instructions to load project for orchestration"
  },
  "status.loadProjectToManageCharacters": {
    "string": "Please load a project first to manage characters.",
    "comment": "Instructions to load project for characters"
  },

  "image.errors.failedToCopy": {
    "string": "Failed to copy image",
    "comment": "Error message when image copy operation fails"
  },
  "image.errors.failedToGetFilename": {
    "string": "Failed to get filename from copied image", 
    "comment": "Error message when unable to extract filename from copied image"
  },
  "image.errors.failedToSelect": {
    "string": "Error selecting image. Please try again.",
    "comment": "Error message when image selection fails"
  },

  "manuscript.saved": {
    "string": "Saved ✔",
    "comment": "Success message when manuscript changes are saved"
  },
  "manuscript.saveError": {
    "string": "Error saving",
    "comment": "Error message when manuscript save fails"
  },
  "manuscript.importDocx": {
    "string": "Import .docx…",
    "comment": "Button text for importing docx files"
  },
  "manuscript.refresh": {
    "string": "Refresh",
    "comment": "Button text for refreshing manuscript list"
  },

  "plan.noPlanToShow": {
    "string": "No plan to show",
    "comment": "Message when no plan data is available to display"
  },
  "plan.goToText": {
    "string": "Go to text",
    "comment": "Button text to navigate to the source text in the manuscript"
  },

  "planning.tooltips.clickToEdit": {
    "string": "Click to edit text (changes save to plan only)",
    "comment": "Tooltip for editable text segments in orchestration view"
  },
  "planning.tooltips.splitSegment": {
    "string": "Split segment at cursor position",
    "comment": "Tooltip for split segment button"
  },
  "planning.tooltips.mergeBackward": {
    "string": "Merge with previous segment",
    "comment": "Tooltip for merge backward button"
  },
  "planning.tooltips.mergeForward": {
    "string": "Merge with next segment",
    "comment": "Tooltip for merge forward button"
  },
  "planning.tooltips.deleteSegment": {
    "string": "Delete this segment",
    "comment": "Tooltip for delete segment button"
  },
  "planning.tooltips.undoChanges": {
    "string": "Undo changes to original text",
    "comment": "Tooltip for undo changes button"
  },
  "planning.tooltips.auditionSegment": {
    "string": "Listen to this segment",
    "comment": "Tooltip for audition segment button"
  },

  "planning.merge.noNextSegment": {
    "string": "No next segment to merge with",
    "comment": "Error message when trying to merge forward with no next segment"
  },
  "planning.merge.noPreviousSegment": {
    "string": "No previous segment to merge with",
    "comment": "Error message when trying to merge backward with no previous segment"
  },

  "planning.status.reloading": {
    "string": "Plan file updated, reloading...",
    "comment": "Status message when plan file is updated and being reloaded"
  },
  "planning.status.completed": {
    "string": "Orchestration page marked as complete",
    "comment": "Status message when orchestration step is completed"
  },
  "planning.status.allChaptersCompleted": {
    "string": "All chapters completed! Orchestration phase is now complete.",
    "comment": "Status message when all chapters are completed"
  },
  "planning.progress.complete": {
    "string": "Orchestration Complete",
    "comment": "Text shown when all orchestration is complete"
  },
  "planning.progress.status": {
    "string": "Orchestration Progress: {{completed}}/{{total}} chapters complete",
    "comment": "Text showing orchestration completion progress"
  },
  "planning.progress.unlockNext": {
    "string": "Complete all chapter orchestration to unlock the next workflow step",
    "comment": "Text explaining what's needed to proceed"
  },
  "planning.readyForSsml": {
    "string": "Ready for Voice",
    "comment": "Badge text shown when orchestration is complete and ready for next step"
  },

  "planning.errors.selectChapter": {
    "string": "Please select a chapter and ensure project is loaded.",
    "comment": "Error message when no chapter is selected or project not loaded"
  },
  "planning.errors.chapterNotFound": {
    "string": "Selected chapter not found.",
    "comment": "Error message when selected chapter cannot be found"
  },
  "planning.errors.ipcNotAvailable": {
    "string": "IPC not available. Please ensure Electron is running.",
    "comment": "Error message when Electron IPC is not available"
  },
  "planning.errors.failedToGeneratePlans": {
    "string": "Failed to generate plans. Please try generating plans manually first.",
    "comment": "Error message when automatic plan generation fails"
  },
  "planning.errors.serviceConnectionFailed": {
    "string": "Failed to connect to character assignment service. Using fallback logic.",
    "comment": "Error message when character assignment service connection fails"
  },
  "planning.errors.completedButFailedReload": {
    "string": "Character assignment completed but failed to reload. Please refresh the chapter.",
    "comment": "Error message when character assignment completes but reload fails"
  },

  "planning.segmentNotFound": {
    "string": "Segment not found",
    "comment": "Error message when a segment cannot be found"
  },
  "planning.invalidSplitPosition": {
    "string": "Invalid split position",
    "comment": "Error message when split position is invalid"
  },
  "planning.cannotDeleteLastSegment": {
    "string": "Cannot delete the last segment of the chapter",
    "comment": "Error message when trying to delete the last segment"
  },
  "planning.segmentTextNotFound": {
    "string": "Segment text not found",
    "comment": "Error message when segment text is missing"
  },
  "planning.segmentSplitSuccessfully": {
    "string": "Segment split successfully",
    "comment": "Success message when a segment is split"
  },
  "planning.splitOperationFailed": {
    "string": "Split operation failed",
    "comment": "Error message when split operation fails"
  },
  "planning.mergeOperationFailed": {
    "string": "Merge operation failed",
    "comment": "Error message when merge operation fails"
  },
  "planning.segmentDeletedSuccessfully": {
    "string": "Segment deleted successfully",
    "comment": "Success message when a segment is deleted"
  },
  "planning.deleteOperationFailed": {
    "string": "Delete operation failed",
    "comment": "Error message when delete operation fails"
  },
  "planning.mergeWithPrevious": {
    "string": "Merge with previous segment",
    "comment": "Tooltip for merge with previous button"
  },
  "planning.mergeWithNext": {
    "string": "Merge with next segment",
    "comment": "Tooltip for merge with next button"
  },
  "planning.deleteThisSegment": {
    "string": "Delete this segment",
    "comment": "Tooltip for delete segment button"
  },
  "planning.undoLastOperation": {
    "string": "Undo last segment operation",
    "comment": "Tooltip for undo button"
  },
  "planning.splitAtCursor": {
    "string": "Split segment at cursor position",
    "comment": "Tooltip for split at cursor button"
  },
  "planning.clickToEdit": {
    "string": "Click to edit text",
    "comment": "Tooltip for editable text"
  },
  "planning.splitInstructions": {
    "string": "✂️ Position cursor where you want to split, then click \"Split at Cursor\"",
    "comment": "Instructions for splitting segments"
  },
  "planning.undoSuccessful": {
    "string": "Undo successful",
    "comment": "Success message when undo operation succeeds"
  },
  "planning.tooltips.saveChanges": {
    "string": "Save changes (Ctrl+Enter)",
    "comment": "Tooltip for save changes button"
  },
  "planning.tooltips.cancelEdit": {
    "string": "Cancel edit (Escape)",
    "comment": "Tooltip for cancel edit button"
  },

  "book.title": {
    "string": "Book Metadata",
    "comment": "Title for book metadata page"
  },
  "book.description": {
    "string": "Manage book information, metadata, and publishing details",
    "comment": "Description for book metadata page"
  },
  "book.loading": {
    "string": "Loading book metadata...",
    "comment": "Loading message for book metadata"
  },
  "book.save": {
    "string": "Save",
    "comment": "Save button text for book metadata"
  },
  "book.saved": {
    "string": "Book metadata saved",
    "comment": "Success message when book metadata is saved"
  },
  "book.saveError": {
    "string": "Error saving book metadata",
    "comment": "Error message when book metadata save fails"
  },
  "book.loadError": {
    "string": "Error loading book metadata",
    "comment": "Error message when book metadata load fails"
  },
  "book.completeButton": {
    "string": "Mark book metadata as complete",
    "comment": "Button text to complete book metadata step"
  },
  "book.basicInfo": {
    "string": "Basic Information",
    "comment": "Section header for basic book information"
  },
  "book.title.label": {
    "string": "Title",
    "comment": "Label for book title field"
  },
  "book.subtitle.label": {
    "string": "Subtitle",
    "comment": "Label for book subtitle field"
  },
  "book.authors.label": {
    "string": "Authors",
    "comment": "Label for book authors field"
  },
  "book.authors.placeholder": {
    "string": "Author 1, Author 2",
    "comment": "Placeholder for authors input"
  },
  "book.narrators.label": {
    "string": "Narrators",
    "comment": "Label for book narrators field"
  },
  "book.narrators.placeholder": {
    "string": "Narrator 1, Narrator 2",
    "comment": "Placeholder for narrators input"
  },
  "book.content": {
    "string": "Content Information",
    "comment": "Section header for content information"
  },
  "book.description.label": {
    "string": "Description",
    "comment": "Label for book description field"
  },
  "book.keywords.label": {
    "string": "Keywords",
    "comment": "Label for book keywords field"
  },
  "book.keywords.placeholder": {
    "string": "keyword1, keyword2, keyword3",
    "comment": "Placeholder for keywords input"
  },
  "book.categories.label": {
    "string": "Categories",
    "comment": "Label for book categories field"
  },
  "book.categories.placeholder": {
    "string": "Fiction / Literary, Suspense",
    "comment": "Placeholder for categories input"
  },
  "book.language.label": {
    "string": "Language",
    "comment": "Label for book language field"
  },
  "book.language.selectOption": {
    "string": "Select language and region...",
    "comment": "Default option for language selection dropdown"
  },
  "book.publishing": {
    "string": "Publishing Information",
    "comment": "Section header for publishing information"
  },
  "book.publisher.label": {
    "string": "Publisher",
    "comment": "Label for publisher field"
  },
  "book.publishingDate.label": {
    "string": "Publishing Date",
    "comment": "Label for publishing date field"
  },
  "book.isbn.label": {
    "string": "ISBN",
    "comment": "Label for ISBN field"
  },
  "book.sku.label": {
    "string": "SKU",
    "comment": "Label for SKU field"
  },

  "project.title": {
    "string": "Project Configuration",
    "comment": "Title for project configuration page"
  },
  "project.loading": {
    "string": "Loading configuration...",
    "comment": "Loading message for project configuration"
  },
  "project.save": {
    "string": "Save",
    "comment": "Save button text for project configuration"
  },
  "project.saved": {
    "string": "Configuration saved",
    "comment": "Success message when configuration is saved"
  },
  "project.saveError": {
    "string": "Error saving configuration",
    "comment": "Error message when configuration save fails"
  },
  "project.loadError": {
    "string": "Error loading configuration",
    "comment": "Error message when configuration load fails"
  },
  "project.completeButton": {
    "string": "Mark configuration as complete",
    "comment": "Button text to complete project configuration step"
  },
  "project.markComplete": {
    "string": "Mark configuration as complete",
    "comment": "Button text to complete project configuration"
  },
  "project.general": {
    "string": "General Configuration",
    "comment": "Section header for general configuration"
  },
  "project.language": {
    "string": "Project language",
    "comment": "Label for project language setting"
  },
  "project.manuscript": {
    "string": "Manuscript",
    "comment": "Section header for manuscript settings"
  },
  "project.chapterGlob": {
    "string": "Chapter file pattern",
    "comment": "Label for chapter file pattern setting"
  },
  "project.planning": {
    "string": "Orchestration",
    "comment": "Section header for orchestration settings"
  },
  "project.maxKb": {
    "string": "Maximum KB per query",
    "comment": "Label for maximum KB per query setting"
  },
  "project.llmAttribution": {
    "string": "LLM Attribution",
    "comment": "Label for LLM attribution setting"
  },
  "project.attributionOn": {
    "string": "Enabled",
    "comment": "Label for attribution enabled option"
  },
  "project.attributionOff": {
    "string": "Disabled",
    "comment": "Label for attribution disabled option"
  },
  "project.ssml": {
    "string": "SSML",
    "comment": "Section header for SSML settings"
  },
  "project.rate": {
    "string": "Rate",
    "comment": "Label for SSML rate setting"
  },
  "project.pitch": {
    "string": "Pitch",
    "comment": "Label for SSML pitch setting"
  },
  "project.breaks": {
    "string": "Breaks (ms)",
    "comment": "Label for SSML breaks setting"
  },
  "project.pauseConfiguration": {
    "string": "Configure pause durations (in milliseconds) to be inserted in the orchestration:",
    "comment": "Description for pause configuration section"
  },
  "project.ttsCachingInfo": {
    "string": "TTS caching is always enabled for optimal performance.",
    "comment": "Information about TTS caching"
  },
  "project.llm": {
    "string": "LLM Engine",
    "comment": "Section header for LLM engine settings"
  },
  "project.llmEngine": {
    "string": "Engine",
    "comment": "Label for LLM engine selection"
  },
  "project.llmModel": {
    "string": "Model (OpenAI)",
    "comment": "Placeholder for OpenAI model field"
  },
  "project.llmModelLocal": {
    "string": "Model (Local)",
    "comment": "Placeholder for local model field"
  },
  "project.llmEndpoint": {
    "string": "Endpoint (Local)",
    "comment": "Placeholder for local endpoint field"
  },
  "project.tts": {
    "string": "TTS Engine",
    "comment": "Section header for TTS engine settings"
  },
  "project.ttsEngine": {
    "string": "Engine",
    "comment": "Label for TTS engine selection"
  },
  "project.ttsVoiceAzure": {
    "string": "Azure voice (e.g., en-US-JennyNeural)",
    "comment": "Placeholder for Azure voice field"
  },
  "project.ttsVoiceElevenlabs": {
    "string": "ElevenLabs voice ID",
    "comment": "Placeholder for ElevenLabs voice ID field"
  },
  "project.ttsModelLocal": {
    "string": "Local model (optional)",
    "comment": "Placeholder for local TTS model field"
  },
  "project.openaiCredentials": {
    "string": "OpenAI Credentials",
    "comment": "Header for OpenAI credentials section"
  },
  "project.openaiApiKey": {
    "string": "OpenAI API Key",
    "comment": "Label for OpenAI API key field"
  },
  "project.azureOpenaiCredentials": {
    "string": "Azure OpenAI Credentials",
    "comment": "Header for Azure OpenAI credentials section"
  },
  "project.azureOpenaiApiKey": {
    "string": "Azure OpenAI API Key",
    "comment": "Label for Azure OpenAI API key field"
  },
  "project.azureOpenaiApiKeyPlaceholder": {
    "string": "Enter Azure OpenAI API key",
    "comment": "Placeholder for Azure OpenAI API key field"
  },
  "project.azureTtsCredentials": {
    "string": "Azure TTS Credentials",
    "comment": "Header for Azure TTS credentials section"
  },
  "project.azureTtsKey": {
    "string": "Azure TTS Key",
    "comment": "Label for Azure TTS key field"
  },
  "project.azureRegion": {
    "string": "Azure Region",
    "comment": "Label for Azure region field"
  },
  "project.sentencePause": {
    "string": "Sentence Pause",
    "comment": "Label for sentence pause setting"
  },
  "project.paragraphPause": {
    "string": "Paragraph Pause",
    "comment": "Label for paragraph pause setting"
  },
  "project.chapterPause": {
    "string": "Chapter Pause",
    "comment": "Label for chapter pause setting"
  },
  "project.commaPause": {
    "string": "Comma Pause",
    "comment": "Label for comma pause setting"
  },
  "project.colonPause": {
    "string": "Colon Pause",
    "comment": "Label for colon pause setting"
  },
  "project.semicolonPause": {
    "string": "Semi-colon Pause",
    "comment": "Label for semicolon pause setting"
  },

  "manu.title": {
    "string": "Manuscript",
    "comment": "Title for manuscript page"
  },
  "manu.description": {
    "string": "Edit and format your manuscript content for audio production",
    "comment": "Description for manuscript page"
  },

  "workflow.readyToStart": {
    "string": "Workflow: Ready to start",
    "comment": "Workflow status message when ready to start"
  },
  "workflow.completed": {
    "string": "Completed: {{steps}}",
    "comment": "Workflow status showing completed steps"
  },
  "workflow.completedLabel": {
    "string": "Completed",
    "comment": "Label for completed workflow status"
  },
  "workflow.next": {
    "string": "Next: {{step}}",
    "comment": "Workflow status showing next step"
  },
  "workflow.nextLabel": {
    "string": "Next",
    "comment": "Label for next step"
  },
  "workflow.allComplete": {
    "string": "🎉 All workflow steps completed!",
    "comment": "Success message when all workflow steps are done"
  },
  "workflow.buttonCompleted": {
    "string": "✓ Completed",
    "comment": "Button text showing step is completed"
  },
  "workflow.stepCompleted": {
    "string": "Step completed",
    "comment": "Message when a step is completed"
  },

  "characters.description": {
    "string": "Detection, editing & voice preparation.",
    "comment": "Description for the characters page"
  },
  "characters.title": {
    "string": "Characters",
    "comment": "Title for the characters page"
  },
  "characters.voiceAssignment": {
    "string": "Voice Assignment",
    "comment": "Label for voice assignment section"
  },
  "characters.detecting": {
    "string": "Detecting...",
    "comment": "Button text while detecting characters"
  },
  "characters.assigningProgress": {
    "string": "Assigning... {{percent}}%",
    "comment": "Progress text while assigning voices with percentage"
  },
  "planning.description": {
    "string": "TTS-compliant chunk breakdown and character voice assignment - work chapter by chapter.",
    "comment": "Description for the planning page"
  },
  "planning.title": {
    "string": "Orchestration",
    "comment": "Title for the orchestration page"
  },
  "planning.searchText": {
    "string": "Search text…",
    "comment": "Placeholder for search input in planning"
  },
  "planning.stats.words": {
    "string": "words",
    "comment": "Label for word count statistics"
  },
  "planning.stats.chars": {
    "string": "chars",
    "comment": "Label for character count statistics"
  },
  "planning.selectChapterToBegin": {
    "string": "Select a chapter to begin",
    "comment": "Message when no chapter is selected"
  },
  "planning.chooseChapterFromDropdown": {
    "string": "Choose a chapter from the dropdown above to view or generate its plan.",
    "comment": "Instructions for chapter selection"
  },
  "planning.selectChapterOption": {
    "string": "Select a chapter...",
    "comment": "Default option in chapter dropdown"
  },
  "planning.selectChapter": {
    "string": "Select Chapter",
    "comment": "Button text when no chapter is selected"
  },
  "planning.generating": {
    "string": "Generating...",
    "comment": "Button text while generating plan"
  },
  "planning.assigning": {
    "string": "Assigning...",
    "comment": "Button text while assigning characters"
  },
  "planning.generateInstruction": {
    "string": "Click \"Generate Plan for {{chapter}}\" to create TTS-compliant chunks with AI speaker detection.",
    "comment": "Instruction for generating a plan for a chapter"
  },
  "planning.segmentsAndVoices": {
    "string": "Segments and Voice Assignment",
    "comment": "Header for segments and voice assignment section"
  },
  "planning.chunksVoiceAssignment": {
    "string": "Segments and Voice Assignment",
    "comment": "Header for planning chunks and voice assignment section"
  },
  "home.projectSetup": {
    "string": "Set up a new audiobook project with the required folder structure.",
    "comment": "Description for creating a new project"
  },
  "project.keywords": {
    "string": "Keywords:",
    "comment": "Label for project keywords field"
  },
  "project.categories": {
    "string": "Categories:",
    "comment": "Label for project categories field"
  },
  "project.openaiBaseUrl": {
    "string": "OpenAI Base URL (optional)",
    "comment": "Label for optional OpenAI base URL field"
  },
  "project.packaging": {
    "string": "Packaging",
    "comment": "Header for packaging section"
  },
  "project.outputDirectory": {
    "string": "Output Directory",
    "comment": "Label for output directory field"
  },
  "project.targetPlatforms": {
    "string": "Target Platforms",
    "comment": "Label for target platforms section"
  },
  "planning.generatePlanFor": {
    "string": "Generate Plan for {{chapter}}",
    "comment": "Button text to generate plan for a specific chapter"
  },
  "planning.assignCharacters": {
    "string": "Assign Characters",
    "comment": "Button text to assign characters"
  },
  "planning.savePlan": {
    "string": "Save Plan",
    "comment": "Button text to save planning data"
  },
  "planning.markChapterComplete": {
    "string": "Mark Chapter Complete",
    "comment": "Button text to mark chapter as complete"
  },
  "planning.chapterLabel": {
    "string": "Chapter:",
    "comment": "Label for chapter selection"
  },
  "planning.chunkLabel": {
    "string": "Chunk",
    "comment": "Label for chunk section"
  },
  "planning.chunkAll": {
    "string": "(all)",
    "comment": "Option to show all chunks"
  },
  "planning.onlyUnknowns": {
    "string": "only unknowns",
    "comment": "Option to show only unknown chunks"
  },
  "planning.preview": {
    "string": "Preview",
    "comment": "Header for preview section"
  },
  "planning.edit": {
    "string": "Edit",
    "comment": "Button text to edit content"
  },
  "planning.merge": {
    "string": "Merge",
    "comment": "Button text to merge segments"
  },
  "planning.delete": {
    "string": "Delete",
    "comment": "Button text to delete item"
  },
  "planning.undo": {
    "string": "Undo",
    "comment": "Button text to undo changes"
  },
  "planning.table.delim": {
    "string": "delim",
    "comment": "Table header for delimiter column"
  },
  "planning.table.start": {
    "string": "start",
    "comment": "Table header for start position column"
  },
  "planning.table.end": {
    "string": "end",
    "comment": "Table header for end position column"
  },
  "planning.table.len": {
    "string": "len",
    "comment": "Table header for length column"
  },
  "planning.table.character": {
    "string": "character",
    "comment": "Table header for character column"
  },
  "characters.defaultStyle": {
    "string": "Default Style",
    "comment": "Label for default voice style"
  },
  "characters.styleEmpathetic": {
    "string": "empathetic",
    "comment": "Voice style option: empathetic"
  },
  "characters.method": {
    "string": "Method",
    "comment": "Label for assignment method"
  },
  "characters.methodManual": {
    "string": "Manual",
    "comment": "Manual assignment method"
  },
  "characters.methodAutoAssigned": {
    "string": "Auto-assigned",
    "comment": "Auto-assigned assignment method"
  },
  "characters.intensity": {
    "string": "Intensity",
    "comment": "Label for voice intensity control"
  },
  "characters.rate": {
    "string": "Rate",
    "comment": "Label for voice rate control"
  },
  "characters.pitch": {
    "string": "Pitch",
    "comment": "Label for voice pitch control"
  },
  "characters.audition": {
    "string": "Audition",
    "comment": "Button text for character voice audition"
  },
  "characters.remove": {
    "string": "Remove",
    "comment": "Button text to remove character"
  },
  "characters.detectRefresh": {
    "string": "Detect / Refresh",
    "comment": "Button text for character detection/refresh"
  },
  "characters.add": {
    "string": "Add",
    "comment": "Button text to add character"
  },
  "characters.sortByFrequency": {
    "string": "Sort by Frequency",
    "comment": "Button text to sort characters by frequency"
  },
  "characters.assignVoices": {
    "string": "Assign Voices",
    "comment": "Button text to assign voices to characters"
  },
  "characters.save": {
    "string": "Save",
    "comment": "Button text to save character data"
  },
  "characters.markComplete": {
    "string": "Mark Complete",
    "comment": "Button text to mark characters step complete"
  },

  "planning.save": {
    "string": "Save",
    "comment": "Save button text in planning editor"
  },
  "planning.cancel": {
    "string": "Cancel",
    "comment": "Cancel button text in planning editor"
  },
  "planning.editPlaceholder": {
    "string": "Edit text here... (Ctrl+Enter to save, Escape to cancel)",
    "comment": "Placeholder text for text editor in planning"
  },
  "planning.overLimits": {
    "string": "OVER LIMITS",
    "comment": "Warning text when segment is over size limits"
  },
  "planning.editInstructions": {
    "string": "Changes are saved to the plan only, not to the original manuscript. Use Ctrl+Enter to save, Escape to cancel.",
    "comment": "Instructions for editing segments"
  },
  "planning.chapterComplete": {
    "string": "Chapter Complete",
    "comment": "Text shown when chapter is marked complete"
  },

  "characters.personality": {
    "string": "Personality",
    "comment": "Label for character personality traits"
  },
  "characters.speakingStyle": {
    "string": "Speaking Style",
    "comment": "Label for character speaking style"
  },

  "home.byAuthors": {
    "string": "by {{authors}}",
    "comment": "Author attribution text in book cards"
  },

  "languages.ar": {
    "string": "Arabic",
    "comment": "Language name for Arabic"
  },
  "languages.bg": {
    "string": "Bulgarian",
    "comment": "Language name for Bulgarian"
  },
  "languages.ca": {
    "string": "Catalan",
    "comment": "Language name for Catalan"
  },
  "languages.cs": {
    "string": "Czech",
    "comment": "Language name for Czech"
  },
  "languages.da": {
    "string": "Danish",
    "comment": "Language name for Danish"
  },
  "languages.de": {
    "string": "German",
    "comment": "Language name for German"
  },
  "languages.el": {
    "string": "Greek",
    "comment": "Language name for Greek"
  },
  "languages.en": {
    "string": "English",
    "comment": "Language name for English"
  },
  "languages.es": {
    "string": "Spanish",
    "comment": "Language name for Spanish"
  },
  "languages.et": {
    "string": "Estonian",
    "comment": "Language name for Estonian"
  },
  "languages.eu": {
    "string": "Basque",
    "comment": "Language name for Basque"
  },
  "languages.fi": {
    "string": "Finnish",
    "comment": "Language name for Finnish"
  },
  "languages.fr": {
    "string": "French",
    "comment": "Language name for French"
  },
  "languages.gl": {
    "string": "Galician",
    "comment": "Language name for Galician"
  },
  "languages.he": {
    "string": "Hebrew",
    "comment": "Language name for Hebrew"
  },
  "languages.hi": {
    "string": "Hindi",
    "comment": "Language name for Hindi"
  },
  "languages.hr": {
    "string": "Croatian",
    "comment": "Language name for Croatian"
  },
  "languages.hu": {
    "string": "Hungarian",
    "comment": "Language name for Hungarian"
  },
  "languages.id": {
    "string": "Indonesian",
    "comment": "Language name for Indonesian"
  },
  "languages.it": {
    "string": "Italian",
    "comment": "Language name for Italian"
  },
  "languages.ja": {
    "string": "Japanese",
    "comment": "Language name for Japanese"
  },
  "languages.ko": {
    "string": "Korean",
    "comment": "Language name for Korean"
  },
  "languages.lt": {
    "string": "Lithuanian",
    "comment": "Language name for Lithuanian"
  },
  "languages.lv": {
    "string": "Latvian",
    "comment": "Language name for Latvian"
  },
  "languages.mt": {
    "string": "Maltese",
    "comment": "Language name for Maltese"
  },
  "languages.nb": {
    "string": "Norwegian",
    "comment": "Language name for Norwegian"
  },
  "languages.nl": {
    "string": "Dutch",
    "comment": "Language name for Dutch"
  },
  "languages.pl": {
    "string": "Polish",
    "comment": "Language name for Polish"
  },
  "languages.pt": {
    "string": "Portuguese",
    "comment": "Language name for Portuguese"
  },
  "languages.ro": {
    "string": "Romanian",
    "comment": "Language name for Romanian"
  },
  "languages.ru": {
    "string": "Russian",
    "comment": "Language name for Russian"
  },
  "languages.sk": {
    "string": "Slovak",
    "comment": "Language name for Slovak"
  },
  "languages.sl": {
    "string": "Slovenian",
    "comment": "Language name for Slovenian"
  },
  "languages.sv": {
    "string": "Swedish",
    "comment": "Language name for Swedish"
  },
  "languages.th": {
    "string": "Thai",
    "comment": "Language name for Thai"
  },
  "languages.tr": {
    "string": "Turkish",
    "comment": "Language name for Turkish"
  },
  "languages.uk": {
    "string": "Ukrainian",
    "comment": "Language name for Ukrainian"
  },
  "languages.vi": {
    "string": "Vietnamese",
    "comment": "Language name for Vietnamese"
  },
  "languages.zh": {
    "string": "Chinese",
    "comment": "Language name for Chinese"
  },
  "characters.addDescriptionPlaceholder": {
    "string": "Add character description...",
    "comment": "Placeholder for character description input"
  },
  "home.baseFolderPlaceholder": {
    "string": "C:\\projects\\audio",
    "comment": "Placeholder for project base folder"
  },
  "home.projectNamePlaceholder": {
    "string": "my_book",
    "comment": "Placeholder for project name"
  },
  "book.isbnPlaceholder": {
    "string": "978-0-000000-00-0",
    "comment": "Placeholder for ISBN field"
  },
  "book.copyrightPlaceholder": {
    "string": "© 2025 Author Name",
    "comment": "Placeholder for copyright field"
  },
  "project.azureModelPlaceholder": {
    "string": "Model (gpt-4o)",
    "comment": "Placeholder for Azure OpenAI model"
  },
  "project.azureEndpointPlaceholder": {
    "string": "Endpoint URL",
    "comment": "Placeholder for Azure endpoint"
  },
  "project.azureApiVersionPlaceholder": {
    "string": "API Version (2024-02-15-preview)",
    "comment": "Placeholder for Azure API version"
  },
  "project.openaiApiKeyPlaceholder": {
    "string": "sk-...",
    "comment": "Placeholder for OpenAI API key"
  },
  "project.openaiBaseUrlPlaceholder": {
    "string": "https://api.openai.com/v1",
    "comment": "Placeholder for OpenAI base URL"
  },
  "project.azureTtsApiKeyPlaceholder": {
    "string": "Enter Azure TTS API key",
    "comment": "Placeholder for Azure TTS API key"
  },
  "project.azureRegionPlaceholder": {
    "string": "e.g., eastus",
    "comment": "Placeholder for Azure region"
  },
  "project.outputFolderPlaceholder": {
    "string": "output",
    "comment": "Placeholder for output folder"
  },

  "audioProduction.loadingPlanData": {
    "string": "Loading plan data...",
    "comment": "Status message when loading plan data"
  },
  "audioProduction.noPlanDataFound": {
    "string": "No plan data found",
    "comment": "Error message when no plan data is available"
  },
  "audioProduction.invalidPlanData": {
    "string": "Invalid plan data - no chunks found",
    "comment": "Error message when plan data has no valid chunks"
  },
  "audioProduction.loadingChapters": {
    "string": "Loading chapters...",
    "comment": "Status message when loading chapter list"
  },
  "audioProduction.failedToLoadChapters": {
    "string": "Failed to load chapters",
    "comment": "Error message when chapter loading fails"
  },
  "audioProduction.generatingAudioForSegment": {
    "string": "Generating audio for segment {{chunkId}}...",
    "comment": "Status message when generating audio for specific segment"
  },
  "audioProduction.audioGeneratedForSegment": {
    "string": "Audio generated for segment {{chunkId}}",
    "comment": "Success message when segment audio is generated"
  },
  "audioProduction.failedToGenerateAudio": {
    "string": "Failed to generate audio for segment {{chunkId}}",
    "comment": "Error message when audio generation fails"
  },
  "audioProduction.generatingChapterAudio": {
    "string": "Generating audio for entire chapter...",
    "comment": "Status message when generating audio for entire chapter"
  },
  "audioProduction.chapterAudioComplete": {
    "string": "Chapter audio generation complete!",
    "comment": "Success message when chapter audio generation is complete"
  },
  "audioProduction.noSegmentSelected": {
    "string": "No segment selected or project not loaded",
    "comment": "Error message when trying to preview with no selection"
  },
  "audioProduction.previewFailed": {
    "string": "Preview failed: {{error}}",
    "comment": "Error message when audio preview fails"
  },
  "audioProduction.noSegmentsAvailable": {
    "string": "No segments available to play",
    "comment": "Error message when playlist has no segments"
  },
  "audioProduction.projectNotLoaded": {
    "string": "Project not loaded",
    "comment": "Error message when project is not loaded"
  },
  "audioProduction.loadedSegmentsWithChains": {
    "string": "Loaded {{segments}} segments with {{chains}} custom processing chains",
    "comment": "Status message showing loaded segments and custom chains"
  },
  "audioProduction.loadedSegmentsWithAudio": {
    "string": "Loaded {{segments}} segments ({{completed}} with audio)",
    "comment": "Status message showing loaded segments and completion status"
  },
  "audioProduction.failedToLoadPlanData": {
    "string": "Failed to load plan data: {{error}}",
    "comment": "Error message when plan data loading fails with specific error"
  },
  "audioProduction.selectChapter": {
    "string": "Select Chapter",
    "comment": "Default option text in chapter dropdown"
  },
  "audioProduction.audioProductionComplete": {
    "string": "Audio Production Complete",
    "comment": "Status text when all chapters have audio generated"
  },
  "audioProduction.chaptersLoaded": {
    "string": "{{completed}}/{{total}} chapters loaded",
    "comment": "Status showing how many chapters are loaded with plans"
  },
  "audioProduction.generateChapterAudio": {
    "string": "Generate Chapter Audio",
    "comment": "Button text to generate audio for entire chapter"
  },
  "audioProduction.play": {
    "string": "Play",
    "comment": "Button text to play audio segment"
  },
  "audioProduction.pause": {
    "string": "Pause",
    "comment": "Button text to pause audio playback"
  },
  "audioProduction.loading": {
    "string": "Loading...",
    "comment": "Button text when audio is loading"
  },
  "audioProduction.playAll": {
    "string": "Play All",
    "comment": "Button text to play all segments in sequence"
  },
  "audioProduction.stop": {
    "string": "Stop",
    "comment": "Button text to stop audio playback"
  },
  "audioProduction.previous": {
    "string": "Previous",
    "comment": "Button text to navigate to previous segment"
  },
  "audioProduction.next": {
    "string": "Next",
    "comment": "Button text to navigate to next segment"
  },
  "audioProduction.previousSegment": {
    "string": "Play previous segment",
    "comment": "Tooltip for previous navigation button"
  },
  "audioProduction.nextSegment": {
    "string": "Play next segment",
    "comment": "Tooltip for next navigation button"
  },
  "audioProduction.error": {
    "string": "Error",
    "comment": "Status indicator for audio error state"
  },
  "audioProduction.processing": {
    "string": "Processing...",
    "comment": "Status indicator when processing audio"
  },
  "audioProduction.playing": {
    "string": "Playing",
    "comment": "Status indicator when audio is playing"
  },
  "audioProduction.segmentsLoaded": {
    "string": "{{count}} segments loaded",
    "comment": "Status showing number of loaded segments"
  },
  "audioProduction.insertSoundEffect": {
    "string": "Insert Sound Effect",
    "comment": "Button and dialog title for inserting a sound effect segment"
  },
  "audioProduction.addSfx": {
    "string": "Add SFX",
    "comment": "Short label for add sound effect button"
  },
  "audioProduction.selectWavFile": {
    "string": "Select WAV File",
    "comment": "Label for WAV file selection in sound effect dialog"
  },
  "audioProduction.wavFileRequirements": {
    "string": "Requirements: 16-48kHz, 16/24-bit, stereo/mono, max 300 seconds",
    "comment": "File format requirements for WAV files"
  },
  "audioProduction.invalidWavFile": {
    "string": "Invalid WAV file: {{error}}",
    "comment": "Error message for invalid WAV file with error details"
  },
  "audioProduction.errorValidatingFile": {
    "string": "Error validating file: {{error}}",
    "comment": "Error message when file validation fails"
  },
  "audioProduction.sfxSegmentAdded": {
    "string": "Sound effect segment added successfully",
    "comment": "Success message when sound effect segment is added"
  },
  "audioProduction.addSegment": {
    "string": "Add Segment",
    "comment": "Button text to confirm adding a new segment"
  },
  "audioProduction.errorCreatingSegment": {
    "string": "Error creating segment: {{error}}",
    "comment": "Error message when segment creation fails"
  },
  "audioProduction.noChaptersWithPlans": {
    "string": "No chapters with plans available",
    "comment": "Message when no chapters have orchestration plans"
  },
  "audioProduction.completeOrchestrationStep": {
    "string": "Complete the orchestration step for at least one chapter to begin audio production.",
    "comment": "Instructions to complete orchestration before audio production"
  },
  "audioProduction.segments": {
    "string": "Audio Segments",
    "comment": "Header for audio segments table"
  },
  "audioProduction.tableHeaderId": {
    "string": "ID",
    "comment": "Table header for segment ID column"
  },
  "audioProduction.tableHeaderTextPreview": {
    "string": "Text Preview",
    "comment": "Table header for text preview column"
  },
  "audioProduction.tableHeaderVoice": {
    "string": "Voice",
    "comment": "Table header for voice assignment column"
  },
  "audioProduction.customSettings": {
    "string": "Custom Settings",
    "comment": "Label for custom audio processing settings option"
  },
  "audioProduction.presetCleanNatural": {
    "string": "Clean & Natural",
    "comment": "Audio preset category for clean and natural sound"
  },
  "audioProduction.presetCharacterVoices": {
    "string": "Character Voices",
    "comment": "Audio preset category for character voices"
  },
  "audioProduction.presetBroadcastQuality": {
    "string": "Broadcast Quality",
    "comment": "Audio preset category for broadcast quality"
  },
  "audioProduction.presetVintageSpecialty": {
    "string": "Vintage & Specialty",
    "comment": "Audio preset category for vintage and specialty effects"
  },
  "audioProduction.presetEnvironmental": {
    "string": "Environmental",
    "comment": "Audio preset category for environmental effects"
  },
  "audioProduction.presetSpecialEffects": {
    "string": "Special Effects",
    "comment": "Audio preset category for special effects"
  },
  "audioProduction.processingStep1": {
    "string": "1. Noise & Cleanup",
    "comment": "Audio processing step 1 header"
  },
  "audioProduction.processingStep2": {
    "string": "2. Voice Correction",
    "comment": "Audio processing step 2 header"
  },
  "audioProduction.processingStep3": {
    "string": "3. Audio Enhancement",
    "comment": "Audio processing step 3 header"
  },
  "audioProduction.processingStep4": {
    "string": "4. Spatial / Aesthetic Enhancements",
    "comment": "Audio processing step 4 header"
  },
  "audioProduction.processingStep5": {
    "string": "5. Mastering",
    "comment": "Audio processing step 5 header"
  },
  "audioProduction.highPassFilter": {
    "string": "High-pass filter (70-90 Hz)",
    "comment": "Label for high-pass filter audio processing option"
  },
  "audioProduction.deClickDeEss": {
    "string": "De-click / De-ess",
    "comment": "Label for de-click and de-ess audio processing"
  },
  "audioProduction.finalDither": {
    "string": "Final dither (16-bit export)",
    "comment": "Label for final dither audio processing option"
  },
  "audioProduction.selectSegmentPrompt": {
    "string": "Select a segment from the grid to begin audio production",
    "comment": "Message prompting user to select a segment"
  },
  "audioProduction.noAudioSegments": {
    "string": "No audio segments available for this chapter",
    "comment": "Message when no audio segments are available"
  },
  "audioProduction.selectChapterPrompt": {
    "string": "Select a chapter to begin audio production",
    "comment": "Message prompting user to select a chapter"
  },
  "audioProduction.markForRevision": {
    "string": "Mark segment for revision",
    "comment": "Tooltip for marking a segment that needs further work"
  },
  "audioProduction.removeRevisionMark": {
    "string": "Remove revision mark",
    "comment": "Tooltip for unmarking a segment that was marked for revision"
  },
  "audioProduction.revisionMarkAdded": {
    "string": "Segment marked for revision",
    "comment": "Confirmation message when segment is marked for revision"
  },
  "audioProduction.revisionMarkRemoved": {
    "string": "Revision mark removed",
    "comment": "Confirmation message when revision mark is removed from segment"
  },
  "audioProduction.revisionMarkError": {
    "string": "Error updating revision mark",
    "comment": "Error message when revision mark update fails"
  },
  "audioProduction.revisionStatus": {
    "string": "Revision Status",
    "comment": "Header for revision status column in segments table"
  },
  "audioProduction.markedForRevision": {
    "string": "Marked for revision",
    "comment": "Tooltip indicating segment is marked for revision"
  },
  "audioProduction.segmentText": {
    "string": "Segment Text",
    "comment": "Header for the text display component"
  },
  "audioProduction.selectSegmentToViewText": {
    "string": "Select a segment to view its text",
    "comment": "Placeholder message when no segment is selected for text display"
  },
  "audioProduction.voice": {
    "string": "Voice",
    "comment": "Label for voice information in text display"
  },
  "audioProduction.progress": {
    "string": "Progress",
    "comment": "Label for progress bar in text display"
  },

  "manuscript.loadingChapter": {
    "string": "Loading chapter…",
    "comment": "Status message when loading a chapter"
  },
  "manuscript.chapterLoaded": {
    "string": "Chapter loaded",
    "comment": "Status message when chapter is successfully loaded"
  },
  "manuscript.chapterNotFound": {
    "string": "Chapter file not found.",
    "comment": "Error message when chapter file is not found"
  },
  "manuscript.autoSaving": {
    "string": "Auto-saving...",
    "comment": "Status message when auto-saving changes"
  },
  "manuscript.characterCount": {
    "string": "Characters: {{count}}",
    "comment": "Character count display in editor"
  },

  "audioProduction.moduleTitle": {
    "string": "Audio Production Module",
    "comment": "Title for the audio production module panel"
  },
  "audioProduction.dynamicControlTitle": {
    "string": "2. Dynamic Control",
    "comment": "Title for dynamic control processing section"
  },
  "audioProduction.eqShapingTitle": {
    "string": "3. EQ Shaping",
    "comment": "Title for EQ shaping processing section"
  },
  "audioProduction.gentleCompression": {
    "string": "Gentle compression",
    "comment": "Label for gentle compression audio effect"
  },
  "audioProduction.limiterSafeguard": {
    "string": "Limiter safeguard (-1 dBFS)",
    "comment": "Label for limiter safeguard audio effect"
  },
  "audioProduction.lowMidCut": {
    "string": "Low-mid cut (150-300 Hz)",
    "comment": "Label for low-mid frequency cut audio effect"
  },
  "audioProduction.presenceBoost": {
    "string": "Presence boost (2-5 kHz)",
    "comment": "Label for presence boost audio effect"
  },
  "audioProduction.airLift": {
    "string": "Air lift (8-12 kHz)",
    "comment": "Label for air lift audio effect"
  },
  "audioProduction.subtleReverb": {
    "string": "Subtle reverb",
    "comment": "Label for subtle reverb audio effect"
  },
  "audioProduction.lowMidCutDynamic": {
    "string": "Low-Mid Cut ({{frequency}}Hz)",
    "comment": "Dynamic label for low-mid cut with frequency parameter"
  },
  "audioProduction.airLiftDynamic": {
    "string": "Air Lift ({{frequency}}kHz)",
    "comment": "Dynamic label for air lift with frequency parameter"
  },
  "audioProduction.presenceBoostDynamic": {
    "string": "Presence Boost ({{frequency}}kHz)",
    "comment": "Dynamic label for presence boost with frequency parameter"
  },
  "audioProduction.hpFilterDynamic": {
    "string": "HP Filter ({{frequency}}Hz)",
    "comment": "Dynamic label for high-pass filter with frequency parameter"
  },
  "audioProduction.deEssDynamic": {
    "string": "De-ess ({{intensity}})",
    "comment": "Dynamic label for de-ess with intensity parameter"
  },
  "audioProduction.compressionDynamic": {
    "string": "Compression ({{ratio}})",
    "comment": "Dynamic label for compression with ratio parameter"
  },
  "audioProduction.limiterDynamic": {
    "string": "Limiter",
    "comment": "Label for limiter effect"
  },
  "audioProduction.reverbDynamic": {
    "string": "Reverb ({{wetMix}}%)",
    "comment": "Dynamic label for reverb with wet mix percentage"
  },
  "audioProduction.stereoEnhance": {
    "string": "Stereo Enhance",
    "comment": "Label for stereo enhancement effect"
  },
  "audioProduction.normalizeDynamic": {
    "string": "Normalize ({{targetLUFS}}LUFS)",
    "comment": "Dynamic label for normalization with LUFS target"
  },
  "audioProduction.peakLimit": {
    "string": "Peak Limit",
    "comment": "Label for peak limiting effect"
  },
  "audioProduction.dither": {
    "string": "Dither",
    "comment": "Label for dithering effect"
  },
  "audioProduction.activeEffects": {
    "string": "Active Effects:",
    "comment": "Label for active audio processing effects summary"
  },
  "audioProduction.activeEffectsNone": {
    "string": "None",
    "comment": "Text when no audio processing effects are active"
  },
  "audioProduction.presetsDescription": {
    "string": "Choose from professional voice processing presets designed for audiobook production.",
    "comment": "Description text for voice processing presets"
  },
  "audioProduction.customSettingsInstruction": {
    "string": "Select \"{{customSettings}}\" to manually configure individual effects below.",
    "comment": "Instruction text for accessing custom audio settings"
  },
  "audioProduction.voiceLabel": {
    "string": "Voice:",
    "comment": "Label for voice assignment in audio production"
  },
  "audioProduction.notAssigned": {
    "string": "Not assigned",
    "comment": "Text when no voice is assigned to a segment"
  },
  "audioProduction.segmentTitle": {
    "string": "Segment {{chunkId}}",
    "comment": "Title for audio segment with chunk ID"
  },
  "audioProduction.compressionLight": {
    "string": "Light",
    "comment": "Light compression option"
  },
  "audioProduction.compressionMedium": {
    "string": "Medium",
    "comment": "Medium compression option"
  },
  "audioProduction.compressionHeavy": {
    "string": "Heavy",
    "comment": "Heavy compression option"
  },
  "audioProduction.room03": {
    "string": "Room (0.3s)",
    "comment": "Room reverb with 0.3 second decay"
  },
  "audioProduction.room04": {
    "string": "Room (0.4s)",
    "comment": "Room reverb with 0.4 second decay"
  },
  "audioProduction.room05": {
    "string": "Room (0.5s)",
    "comment": "Room reverb with 0.5 second decay"
  },
  "audioProduction.stereoEnhancerSubtle": {
    "string": "Stereo enhancer (subtle)",
    "comment": "Label for subtle stereo enhancement audio effect"
  },
  "audioProduction.consistencyMasteringTitle": {
    "string": "Consistency & Mastering",
    "comment": "Title for consistency and mastering processing section"
  },
  "audioProduction.normalizeAudiobook": {
    "string": "Normalize to audiobook standards",
    "comment": "Label for audiobook normalization audio effect"
  },
  "audioProduction.peakLimitMax": {
    "string": "Peak limit (-3 dB max)",
    "comment": "Label for peak limiting with maximum dB level"
  },
  "audioProduction.processingChainTitle": {
    "string": "Audio Processing Chain",
    "comment": "Title for the audio processing chain section"
  },
  "audioProduction.professionalVoicePresets": {
    "string": "Professional Voice Presets",
    "comment": "Title for professional voice presets section"
  },
  "audioProduction.chapterLabel": {
    "string": "Chapter",
    "comment": "Label for chapter selection in audio production"
  },
  "audioProduction.pageDescription": {
    "string": "Generate high-quality audio from orchestrated segments - work chapter by chapter. Only chapters with plans are available.",
    "comment": "Main description text for the audio production page"
  },
  "audioPresets.cleanNatural.name": {
    "string": "Clean Natural",
    "comment": "Name for Clean Natural audio preset"
  },
  "audioPresets.cleanNatural.description": {
    "string": "Minimal processing for pristine natural voice",
    "comment": "Description for Clean Natural audio preset"
  },
  "audioPresets.cleanPolished.name": {
    "string": "Clean Polished",
    "comment": "Name for Clean Polished audio preset"
  },
  "audioPresets.cleanPolished.description": {
    "string": "Light enhancement for professional narration",
    "comment": "Description for Clean Polished audio preset"
  },
  "audioPresets.cleanIntimate.name": {
    "string": "Clean Intimate",
    "comment": "Name for Clean Intimate audio preset"
  },
  "audioPresets.cleanIntimate.description": {
    "string": "Close, intimate storytelling style",
    "comment": "Description for Clean Intimate audio preset"
  },
  "audioPresets.characterPhone.name": {
    "string": "Phone/Radio",
    "comment": "Name for Phone/Radio character audio preset"
  },
  "audioPresets.characterPhone.description": {
    "string": "Telephone or vintage radio effect",
    "comment": "Description for Phone/Radio character audio preset"
  },
  "audioPresets.characterVintage.name": {
    "string": "Vintage Radio",
    "comment": "Name for Vintage Radio character audio preset"
  },
  "audioPresets.characterVintage.description": {
    "string": "Classic 1940s radio broadcast sound",
    "comment": "Description for Vintage Radio character audio preset"
  },
  "audioPresets.characterElderly.name": {
    "string": "Elderly Voice",
    "comment": "Name for Elderly Voice character audio preset"
  },
  "audioPresets.characterElderly.description": {
    "string": "Warm, aged character with gentle processing",
    "comment": "Description for Elderly Voice character audio preset"
  },
  "audioPresets.characterChild.name": {
    "string": "Child Voice",
    "comment": "Name for Child Voice character audio preset"
  },
  "audioPresets.characterChild.description": {
    "string": "Bright, youthful character processing",
    "comment": "Description for Child Voice character audio preset"
  },
  "audioPresets.characterMonster.name": {
    "string": "Monster Voice",
    "comment": "Name for Monster Voice character audio preset"
  },
  "audioPresets.characterMonster.description": {
    "string": "Dark, menacing character effect",
    "comment": "Description for Monster Voice character audio preset"
  },
  "audioPresets.broadcastRadio.name": {
    "string": "Radio Broadcast",
    "comment": "Name for Radio Broadcast audio preset"
  },
  "audioPresets.broadcastRadio.description": {
    "string": "Professional radio station processing",
    "comment": "Description for Radio Broadcast audio preset"
  },
  "audioPresets.broadcastNews.name": {
    "string": "News Anchor",
    "comment": "Name for News Anchor broadcast audio preset"
  },
  "audioPresets.broadcastNews.description": {
    "string": "Crisp, authoritative news presentation",
    "comment": "Description for News Anchor broadcast audio preset"
  },
  "audioPresets.broadcastPodcast.name": {
    "string": "Podcast Pro",
    "comment": "Name for Podcast Pro broadcast audio preset"
  },
  "audioPresets.broadcastPodcast.description": {
    "string": "Optimized for podcast distribution",
    "comment": "Description for Podcast Pro broadcast audio preset"
  },
  "audioPresets.broadcastSports.name": {
    "string": "Sports Commentary",
    "comment": "Name for Sports Commentary broadcast audio preset"
  },
  "audioPresets.broadcastSports.description": {
    "string": "Dynamic, energetic sports broadcasting",
    "comment": "Description for Sports Commentary broadcast audio preset"
  },
  "audioPresets.vintageWarm.name": {
    "string": "Warm Vintage",
    "comment": "Name for Warm Vintage audio preset"
  },
  "audioPresets.vintageWarm.description": {
    "string": "Warm, analog-style processing",
    "comment": "Description for Warm Vintage audio preset"
  },
  "audioPresets.vintageGoldenAge.name": {
    "string": "Golden Age Radio",
    "comment": "Name for Golden Age Radio vintage audio preset"
  },
  "audioPresets.vintageGoldenAge.description": {
    "string": "Classic 1940s-50s radio drama sound",
    "comment": "Description for Golden Age Radio vintage audio preset"
  },
  "audioPresets.vintageTape.name": {
    "string": "Vintage Tape",
    "comment": "Name for Vintage Tape audio preset"
  },
  "audioPresets.vintageTape.description": {
    "string": "Analog tape warmth and saturation",
    "comment": "Description for Vintage Tape audio preset"
  },
  "audioPresets.vintageLoFi.name": {
    "string": "Lo-Fi Vintage",
    "comment": "Name for Lo-Fi Vintage audio preset"
  },
  "audioPresets.vintageLoFi.description": {
    "string": "Deliberately degraded retro sound",
    "comment": "Description for Lo-Fi Vintage audio preset"
  },
  "audioProduction.pageTitle": {
    "string": "Audio Production",
    "comment": "Main page title for the audio production page"
  },
  "audioProduction.wetMix": {
    "string": "Wet mix:",
    "comment": "Label for wet mix control in reverb settings"
  },
  "cost.title": {
    "string": "Cost Tracking",
    "comment": "Main title for the cost tracking dashboard page"
  },
  "cost.description": {
    "string": "Monitor AI service costs and analyze cache savings",
    "comment": "Description text for the cost tracking dashboard"
  },
  "cost.loading": {
    "string": "Loading cost data...",
    "comment": "Loading message while cost data is being retrieved"
  },
  "cost.noData": {
    "string": "No cost data available",
    "comment": "Message displayed when no cost tracking data exists"
  },
  "cost.settings": {
    "string": "Settings",
    "comment": "Button text and panel title for cost tracking settings"
  },
  "cost.timeRange.7d": {
    "string": "Last 7 days",
    "comment": "Time range option for last 7 days"
  },
  "cost.timeRange.30d": {
    "string": "Last 30 days",
    "comment": "Time range option for last 30 days"
  },
  "cost.timeRange.90d": {
    "string": "Last 90 days",
    "comment": "Time range option for last 90 days"
  },
  "cost.timeRange.all": {
    "string": "All time",
    "comment": "Time range option for all historical data"
  },
  "cost.pricing.openaiGpt4Input": {
    "string": "OpenAI GPT-4 Input (per 1K tokens)",
    "comment": "Label for OpenAI GPT-4 input token pricing setting"
  },
  "cost.pricing.openaiGpt4Output": {
    "string": "OpenAI GPT-4 Output (per 1K tokens)",
    "comment": "Label for OpenAI GPT-4 output token pricing setting"
  },
  "cost.pricing.elevenlabsTts": {
    "string": "ElevenLabs TTS (per 1K chars)",
    "comment": "Label for ElevenLabs TTS character pricing setting"
  },
  "cost.pricing.azureTts": {
    "string": "Azure TTS (per 1K chars)",
    "comment": "Label for Azure TTS character pricing setting"
  },
  "cost.enableTracking": {
    "string": "Enable Cost Tracking",
    "comment": "Checkbox label to enable/disable cost tracking"
  },
  "cost.trackCacheSavings": {
    "string": "Track Cache Savings",
    "comment": "Checkbox label to enable/disable cache savings tracking"
  },
  "cost.totalCost": {
    "string": "Total Cost",
    "comment": "Label for total accumulated cost card"
  },
  "cost.cacheSavings": {
    "string": "Cache Savings",
    "comment": "Label for cache savings cost card"
  },
  "cost.netCost": {
    "string": "Net Cost",
    "comment": "Label for net cost (total minus savings) card"
  },
  "cost.totalUsage": {
    "string": "Total Usage",
    "comment": "Label for usage statistics card"
  },
  "cost.afterCacheSavings": {
    "string": "After cache savings",
    "comment": "Subtitle for net cost card"
  },
  "cost.cacheHitRate": {
    "string": "Cache Hit Rate",
    "comment": "Label for cache hit rate percentage"
  },
  "cost.costByService": {
    "string": "Cost by AI Service Type",
    "comment": "Title for service type cost breakdown section (LLM vs TTS)"
  },
  "cost.llmServices": {
    "string": "LLM Services",
    "comment": "Label for Large Language Model services in cost breakdown"
  },
  "cost.ttsServices": {
    "string": "TTS Services",
    "comment": "Label for Text-to-Speech services in cost breakdown"
  },
  "cost.topOperations": {
    "string": "Top Operations by Cost",
    "comment": "Title for most expensive operations section"
  },
  "cost.cachePerformance": {
    "string": "Cache Performance",
    "comment": "Title for cache performance statistics section"
  },
  "cost.cacheHits": {
    "string": "Cache Hits",
    "comment": "Label for cache hit statistics"
  },
  "cost.cacheMisses": {
    "string": "Cache Misses",
    "comment": "Label for cache miss statistics"
  },
  "cost.hitRate": {
    "string": "Hit Rate",
    "comment": "Label for cache hit rate percentage"
  },
  "cost.smartCachingImpact": {
    "string": "Smart Caching Impact",
    "comment": "Title for cache savings impact message"
  },
  "cost.savingsMessage": {
    "string": "You've saved {{savings}} thanks to intelligent caching! Without caching, your total cost would have been {{totalWithSavings}}.",
    "comment": "Message showing cache savings impact with cost values"
  },
  "cost.exportData": {
    "string": "Export Data as CSV",
    "comment": "Button text for exporting cost data as CSV file"
  },
  "cost.clearData": {
    "string": "Clear Data",
    "comment": "Button text for clearing all cost data"
  },
  "cost.clearDataConfirm": {
    "string": "Are you sure you want to clear all cost data? This action cannot be undone.",
    "comment": "Confirmation dialog text for clearing cost data"
  },
  "cost.operations": {
    "string": "Operations",
    "comment": "Label for operations in timeline hover tooltips"
  },
  "cost.total": {
    "string": "Total",
    "comment": "Label for total cost in timeline hover tooltips"
  },
  "cost.saved": {
    "string": "Saved",
    "comment": "Label for saved cost in timeline hover tooltips"
  },
  "cost.avgOpsPerDay": {
    "string": "Avg Ops/Day",
    "comment": "Label for average operations per day statistic"
  },
  "cost.more": {
    "string": "more",
    "comment": "Text for showing additional items in lists (e.g., '+2 more')"
  },
  "cost.noProjectLoaded": {
    "string": "No project loaded",
    "comment": "Message displayed when no project is currently loaded"
  },
  "cost.openProjectFirst": {
    "string": "Please open a project to view cost tracking data",
    "comment": "Message instructing user to open a project first"
  },
  "cost.noTimelineData": {
    "string": "No timeline data available for the selected period",
    "comment": "Message displayed when timeline has no data for selected time range"
  },
  "cost.modules.LLM": {
    "string": "LLM",
    "comment": "Abbreviation for Large Language Model in timeline legend"
  },
  "cost.modules.TTS": {
    "string": "TTS",
    "comment": "Abbreviation for Text-to-Speech in timeline legend"
  },
  "cost.operations.manuscriptParse": {
    "string": "Document Parsing",
    "comment": "Display name for manuscript parsing operations"
  },
  "cost.operations.characterDetect": {
    "string": "Character Detection",
    "comment": "Display name for character detection operations"
  },
  "cost.operations.planBuild": {
    "string": "Chapter Planning",
    "comment": "Display name for chapter planning operations"
  },
  "cost.operations.characterAssignment": {
    "string": "Character Assignment",
    "comment": "Display name for character assignment operations"
  },
  "cost.operations.voiceAssignment": {
    "string": "Voice Assignment",
    "comment": "Display name for voice assignment operations"
  },
  "cost.operations.chapterPlanning": {
    "string": "Chapter Planning",
    "comment": "Display name for chapter planning operations"
  },
  "cost.operations.voiceAudition": {
    "string": "Voice Audition",
    "comment": "Display name for voice audition operations"
  },
  "cost.operations.audioPreview": {
    "string": "Audio Preview",
    "comment": "Display name for audio preview operations"
  },
  "cost.operations.audioSynthesis": {
    "string": "Audio Generation",
    "comment": "Display name for audio synthesis operations"
  },
  "cost.operations.segmentGeneration": {
    "string": "Segment Audio",
    "comment": "Display name for segment audio generation operations"
  },
  "cost.operations.voiceTesting": {
    "string": "Voice Testing",
    "comment": "Display name for voice testing operations"
  },
  "cost.operations.audioProcessing": {
    "string": "Audio Processing",
    "comment": "Display name for audio processing operations"
  },
  "cost.operations.soxProcessing": {
    "string": "Audio Effects",
    "comment": "Display name for SoX audio processing operations"
  },
  "cost.operations.effectChain": {
    "string": "Effect Processing",
    "comment": "Display name for audio effect chain operations"
  },
  "cost.operations.textParsing": {
    "string": "Text Analysis",
    "comment": "Display name for text parsing operations"
  },
  "cost.operations.segmentParsing": {
    "string": "Segment Processing",
    "comment": "Display name for segment parsing operations"
  },
  "cost.operations.ssmlGeneration": {
    "string": "SSML Generation",
    "comment": "Display name for SSML generation operations"
  },
  "cost.operations.cacheOperation": {
    "string": "Cache Access",
    "comment": "Display name for cache operation operations"
  },
  "cost.operations.cacheManagement": {
    "string": "Cache Management",
    "comment": "Display name for cache management operations"
  },
  "cost.refresh": {
    "string": "Refresh",
    "comment": "Button text for refreshing cost data"
  },
  "cost.costByModule": {
    "string": "Cost by Application Module",
    "comment": "Title for application module-based cost breakdown section"
  },
  "cost.costByPage": {
    "string": "Cost by Phase",
    "comment": "Title for phase-based cost breakdown section"
  },
  "cost.costTimeline": {
    "string": "Cost Timeline",
    "comment": "Title for cost timeline visualization section"
  },
  "cost.avgCostPerDay": {
    "string": "Avg Cost/Day",
    "comment": "Label for average cost per day statistic"
  },
  "cost.days": {
    "string": "days",
    "comment": "Unit label for days in statistics"
  },
  "cost.calls": {
    "string": "calls",
    "comment": "Unit label for API calls in statistics"
  },
  "cost.ofTotalCost": {
    "string": "of total cost",
    "comment": "Suffix for percentage of total cost displays"
  },
  "cost.units.kTokens": {
    "string": "K tokens",
    "comment": "Unit abbreviation for thousands of tokens"
  },
  "cost.units.kCharacters": {
    "string": "K characters",
    "comment": "Unit abbreviation for thousands of characters"
  },
  "cost.pricing.openaiGpt4oInput": {
    "string": "OpenAI GPT-4o Input (per 1K tokens)",
    "comment": "Label for OpenAI GPT-4o input token pricing setting"
  },
  "cost.pricing.openaiGpt4oOutput": {
    "string": "OpenAI GPT-4o Output (per 1K tokens)",
    "comment": "Label for OpenAI GPT-4o output token pricing setting"
  },
  "cost.pricing.openaiGpt4oMiniInput": {
    "string": "OpenAI GPT-4o Mini Input (per 1K tokens)",
    "comment": "Label for OpenAI GPT-4o Mini input token pricing setting"
  },
  "cost.pricing.openaiGpt4oMiniOutput": {
    "string": "OpenAI GPT-4o Mini Output (per 1K tokens)",
    "comment": "Label for OpenAI GPT-4o Mini output token pricing setting"
  },
  "cost.pricing.openaiTts": {
    "string": "OpenAI TTS (per 1K chars)",
    "comment": "Label for OpenAI TTS character pricing setting"
  },
  "cost.unknown": {
    "string": "Unknown",
    "comment": "Label for unknown page or operation"
  },
  "cost.cacheHit_one": {
    "string": "Cache Hit",
    "comment": "Singular form for cache hit count"
  },
  "cost.cacheHit_other": {
    "string": "Cache Hits",
    "comment": "Plural form for cache hit count"
  },
  "cost.cacheMiss_one": {
    "string": "Cache Miss",
    "comment": "Singular form for cache miss count"
  },
  "cost.cacheMiss_other": {
    "string": "Cache Misses",
    "comment": "Plural form for cache miss count"
  },
  "cost.call_one": {
    "string": "call",
    "comment": "Singular form for API call count"
  },
  "cost.call_other": {
    "string": "calls",
    "comment": "Plural form for API call count"
  },
  "cost.day_one": {
    "string": "Day",
    "comment": "Singular form for day count"
  },
  "cost.day_other": {
    "string": "Days",
    "comment": "Plural form for day count"
  },
  "cost.csv.id": {
    "string": "ID",
    "comment": "CSV column header for entry ID"
  },
  "cost.csv.timestamp": {
    "string": "Timestamp",
    "comment": "CSV column header for timestamp"
  },
  "cost.csv.serviceType": {
    "string": "Service Type",
    "comment": "CSV column header for service type (LLM/TTS)"
  },
  "cost.csv.provider": {
    "string": "Provider",
    "comment": "CSV column header for AI service provider"
  },
  "cost.csv.operation": {
    "string": "Operation",
    "comment": "CSV column header for operation name"
  },
  "cost.csv.totalCost": {
    "string": "Total Cost (USD)",
    "comment": "CSV column header for total cost in USD"
  },
  "cost.csv.unitCost": {
    "string": "Unit Cost",
    "comment": "CSV column header for unit cost"
  },
  "cost.csv.inputTokens": {
    "string": "Input Tokens",
    "comment": "CSV column header for input tokens"
  },
  "cost.csv.outputTokens": {
    "string": "Output Tokens",
    "comment": "CSV column header for output tokens"
  },
  "cost.csv.charactersProcessed": {
    "string": "Characters Processed",
    "comment": "CSV column header for characters processed"
  },
  "cost.csv.audioSeconds": {
    "string": "Audio Seconds",
    "comment": "CSV column header for audio duration in seconds"
  },
  "cost.csv.wasCached": {
    "string": "Was Cached",
    "comment": "CSV column header for cache enabled status"
  },
  "cost.csv.cacheHit": {
    "string": "Cache Hit",
    "comment": "CSV column header for cache hit status"
  },
  "cost.csv.originalCost": {
    "string": "Original Cost (USD)",
    "comment": "CSV column header for original cost before cache savings"
  },
  "cost.csv.page": {
    "string": "Phase",
    "comment": "CSV column header for phase name"
  },
  "cost.csv.projectId": {
    "string": "Project ID",
    "comment": "CSV column header for project ID"
  },
  "cost.csv.chapterId": {
    "string": "Chapter ID",
    "comment": "CSV column header for chapter ID"
  },
  "cost.csv.segmentId": {
    "string": "Segment ID",
    "comment": "CSV column header for segment ID"
  },
  "cost.csv.exportTitle": {
    "string": "Khipu Studio - Cost Tracking Data Export",
    "comment": "Title in CSV file header"
  },
  "cost.csv.exportDate": {
    "string": "Export Date",
    "comment": "Export date label in CSV file header"
  },
  "cost.csv.totalEntries": {
    "string": "Total Entries",
    "comment": "Total entries label in CSV file header"
  },
  "cost.csv.dateRange": {
    "string": "Date Range",
    "comment": "Date range label in CSV file header"
  },
  "cost.csv.dataFormat": {
    "string": "Data Format",
    "comment": "Data format label in CSV file header"
  },
  "cost.csv.yes": {
    "string": "Yes",
    "comment": "Yes value for boolean fields in CSV"
  },
  "cost.csv.no": {
    "string": "No",
    "comment": "No value for boolean fields in CSV"
  }
}
